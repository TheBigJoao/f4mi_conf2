{
	"camera" : 
	{
		"center" : "0.00000 0.00000 -1.00000",
		"eye" : "0.00000 0.00000 0.00000",
		"up" : "0.00000 1.00000 0.00000"
	},
	"general" : 
	{
		"ambientcolor" : "1.00000 1.00000 0.80000",
		"bloom" : 
		{
			"user" : "enablebloom",
			"value" : true
		},
		"bloomhdrfeather" : 0.1,
		"bloomhdriterations" : 8,
		"bloomhdrscatter" : 1.619,
		"bloomhdrstrength" : 2.0,
		"bloomhdrthreshold" : 1.0,
		"bloomstrength" : 
		{
			"user" : "strength",
			"value" : 3.0
		},
		"bloomthreshold" : 
		{
			"user" : "bloomthreshold",
			"value" : 0.75
		},
		"bloomtint" : "0.00000 0.00000 0.00000",
		"camerafade" : true,
		"cameraparallax" : false,
		"cameraparallaxamount" : 0.5,
		"cameraparallaxdelay" : 0.1,
		"cameraparallaxmouseinfluence" : 0.5,
		"camerapreview" : true,
		"camerashake" : false,
		"camerashakeamplitude" : 0.5,
		"camerashakeroughness" : 1.0,
		"camerashakespeed" : 3.0,
		"clearcolor" : "0.00392 0.00392 0.01176",
		"clearenabled" : true,
		"farz" : 10000.0,
		"fov" : 50.0,
		"hdr" : false,
		"lightconfig" : 
		{
			"point" : 2
		},
		"nearz" : 0.0099999998,
		"orthogonalprojection" : 
		{
			"height" : 1080,
			"width" : 1920
		},
		"skylightcolor" : "0.30000 0.30000 0.30000",
		"zoom" : 1.01
	},
	"objects" : 
	[
		{
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    targetColor = event.primaryColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 84,
			"image" : "models/106891.json",
			"name" : "106891",
			"origin" : "960.00000 540.00000 0.00000",
			"size" : "2134.00000 1200.00000"
		},
		{
			"cascadedistance0" : 576.0,
			"cascadedistance1" : 1152.0,
			"cascadedistance2" : 2112.0,
			"castshadow" : false,
			"castvolumetrics" : true,
			"color" : 
			{
				"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    // Get the primary color from the media thumbnail\n    let primaryColor = event.primaryColor;\n\n    // Calculate the opposite color with less white\n    let oppositeColor = new Vec3(0.7 - primaryColor.x, 0.7 - primaryColor.y, 0.7 - primaryColor.z);\n\n    // Set the target color to the opposite color\n    targetColor = oppositeColor;\n}\n",
				"value" : "1.00000 0.00000 1.00000"
			},
			"density" : 2.04,
			"exponent" : 1.84,
			"id" : 171,
			"intensity" : 14.73,
			"light" : "lpoint",
			"name" : "",
			"origin" : "141.60580 -57.45552 346.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"radius" : 527.95001,
			"volumetricsexponent" : 0.72000003
		},
		{
			"cascadedistance0" : 576.0,
			"cascadedistance1" : 1152.0,
			"cascadedistance2" : 2112.0,
			"castshadow" : false,
			"castvolumetrics" : true,
			"color" : 
			{
				"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    // Get the primary color from the media thumbnail\n    let primaryColor = event.primaryColor;\n\n    // Calculate the opposite color with less white\n    let oppositeColor = new Vec3(0.7 - primaryColor.x, 0.7 - primaryColor.y, 0.7 - primaryColor.z);\n\n    // Set the target color to the opposite color\n    targetColor = oppositeColor;\n}\n",
				"value" : "1.00000 0.00000 1.00000"
			},
			"density" : 2.04,
			"exponent" : 2.78,
			"id" : 276,
			"intensity" : 14.73,
			"light" : "lpoint",
			"name" : "",
			"origin" : "1539.62500 692.79034 346.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"radius" : 568.48999,
			"volumetricsexponent" : 0.72000003
		},
		{
			"alpha" : 0.28999999,
			"castshadow" : false,
			"id" : 63,
			"image" : "models/106891.json",
			"name" : "106891",
			"origin" : "960.00000 540.00000 0.00000",
			"size" : "2134.00000 1200.00000"
		},
		{
			"alpha" : 0.0,
			"angles" : "0.05236 0.00209 0.01204",
			"castshadow" : false,
			"color" : "0.75294 0.75294 0.75294",
			"id" : 106,
			"image" : "models/solid_instance_model_581393ad.json",
			"instance" : 
			{
				"combos" : 
				{
					"version" : 2
				},
				"id" : 107,
				"textures" : [ "util/white" ]
			},
			"locktransforms" : true,
			"name" : "userProperties",
			"origin" : "1720.00000 1440.00000 0.00000",
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "256.00000 256.00000",
			"solid" : false,
			"visible" : false
		},
		{
			"castshadow" : false,
			"id" : 255,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : true,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/MobileFont.ttf",
			"horizontalalign" : "left",
			"id" : 261,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 593.0,
			"name" : "DummySongTitle",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1465) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1142) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}",
				"value" : "628.47028 208.00571 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "200.00000 38.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\n\n\nexport function mediaPropertiesChanged(event) {\n\n\tthisLayer.text = event.title\n}",
				"value" : "SONG NAME"
			},
			"verticalalign" : "center",
			"visible" : false
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : true,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/MobileFont.ttf",
			"horizontalalign" : "left",
			"id" : 669,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 593.0,
			"name" : "DummySongTitleScroll",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1465) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1122) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}",
				"value" : "620.06897 205.87756 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "200.00000 38.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\nvar currentTitle = \"\"\n\n\nexport function mediaPropertiesChanged(event) {\n\n\tcurrentTitle = event.title\n\tthisLayer.text = currentTitle\n}\n\nexport function update(value){\n\treturn thisScene.getLayer(\"Song Title\").text\n}",
				"value" : "SONG NAME"
			},
			"verticalalign" : "center",
			"visible" : false
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : true,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "left",
			"id" : 432,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : true,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 593.0,
			"name" : "Song Title bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1465) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1142) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}",
				"value" : "609.76331 210.80603 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "203.00000 41.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\n\nvar currentTitle = \"\"\nvar animatedCounter = 0\nvar scrollCooldownCounter = 0\nvar scrollCooldownduration = 20\nvar enableScrollCoolDown = false\nvar enableAnimatedScroll = false\nvar displayTitle = \"\"\nvar displayLength = 593\nvar enablePauseEnd = false\nvar pauseEndCounter = 0\nvar pauseEndDuration = 200\nvar pauseDuration = 600\nvar pauseCounter = 0\nvar enablePause = false\n\n\nvar EnableTypeInAnimation = false\nvar EnableTypingDelay = false\nvar TypingDelayCount = 0\nvar TypingDelayDuration\nvar CurretTypedIndex = 0\nvar MaxTypingDelay = 20\nvar MinTypingDelay = 10\n\nvar EnableTypingMistake = true\nvar StartTypeInAnimation\nvar Typingmistakechance = 0.5\nvar MistakeWordCount = 0\nvar MaxMistakeWord = 3\nvar TotalMistakewords = 0\nvar StartMistakeWord = false\nvar StartDeleteMistake = false\nvar IncorrectWord = \"\"\nvar PossibleMistakeString = \"1234567890-=qwertyuiop[]asdfghjkl;'zxcvbnm,./\"\n\n// // Media is Playing: 1\n// // Media is Paused: 2\n// // Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar enablePauseAtStart = false\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('maxtypingdelay')) {\n\t\t\tMaxTypingDelay = changedUserProperties.maxtypingdelay\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('mintypingdelay')) {\n\t\t\tMinTypingDelay = changedUserProperties.mintypingdelay\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('typingmistakechance')){\n\t\t\tTypingmistakechance = changedUserProperties.typingmistakechance\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"enabletypingmistake\")){\n\t\t\tEnableTypingMistake = changedUserProperties.enabletypingmistake\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"enabletypinganimation\")){\n\t\t\tEnableTypeInAnimation = changedUserProperties.enabletypinganimation\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"maxmistakeword\")){\n\t\t\tMaxMistakeWord = changedUserProperties.maxmistakeword\n\t\t}\n}\n\nfunction initTypingDelay(factor){\n\tEnableTypingDelay = true\n\tTypingDelayCount = 0\n\tTypingDelayDuration = new Number(Math.random() * (MaxTypingDelay - MinTypingDelay) * factor) + MinTypingDelay\n\t// console.log(\"delay\",TypingDelayDuration)\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function mediaPropertiesChanged(event) {\n\tcurrentTitle = event.title;\n\tdisplayTitle = currentTitle\n\n\tenablePauseAtStart = true\n\n\tif (EnableTypeInAnimation) {\n\t\tif (MinTypingDelay >= MaxTypingDelay){\n\t\t\tvar temp = MinTypingDelay\n\t\t\tMinTypingDelay = MaxTypingDelay\n\t\t\tMaxTypingDelay = temp\n\t\t}\n\t\tTypingDelayDuration = new Number(Math.random() * (MaxTypingDelay - MinTypingDelay)) + MinTypingDelay\n\t\tCurretTypedIndex = 0\n\t\tStartTypeInAnimation = true\n\t\tinitTypingDelay(1)\n\t}\n}\n\nexport function update(value) {\n\tvar dummySongTitleSizeX = thisScene.getLayer(\"DummySongTitle\").size.x\n\tenableAnimatedScroll = false\n\tif (dummySongTitleSizeX > thisLayer.maxwidth){\n\t\tenableAnimatedScroll = true\n\t\tif (enablePauseAtStart == true){\n\t\t\tenablePauseAtStart = false\n\t\t\tenablePause = true\n\t\t}\n\t}\n\t// console.log(dummySongTitleSizeX)\n\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\tif (LastMusicState != CurrentMusicState){\n\t\t\tLastMusicState = CurrentMusicState\n\t\t\tif (EnableTypeInAnimation){\n\t\t\t\tCurretTypedIndex = 0\n\t\t\t\tStartTypeInAnimation = true\n\t\t\t\tinitTypingDelay(1)\n\t\t\t}\n\t\t}\n\t\tif (EnableTypeInAnimation){\n\t\t\tif (StartTypeInAnimation) {\n\t\t\t\tif (CurretTypedIndex >= currentTitle.length){\n\t\t\t\t\tStartTypeInAnimation = false\n\t\t\t\t\tCurretTypedIndex = 0\n\t\t\t\t\tEnableTypingDelay = false\n\t\t\t\t} else {\n\t\t\t\t\tif (EnableTypingDelay){\n\t\t\t\t\t\tif (TypingDelayCount >= TypingDelayDuration){\n\t\t\t\t\t\t\tTypingDelayCount = 0\n\t\t\t\t\t\t\tEnableTypingDelay = false\n\t\t\t\t\t\t} \n\t\t\t\t\t\tTypingDelayCount ++\n\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\n\t\t\t\t\t} \n\t\t\t\t\tinitTypingDelay(1)\n\t\t\t\t\tif (EnableTypingMistake){\n\t\t\t\t\t\tif (StartMistakeWord)\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\tif (MistakeWordCount >= TotalMistakewords){\n\t\t\t\t\t\t\t\tStartDeleteMistake = true\n\t\t\t\t\t\t\t\tStartMistakeWord = false\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tIncorrectWord += PossibleMistakeString[PossibleMistakeString.length * Math.random() | 0]\n\t\t\t\t\t\t\tMistakeWordCount ++\n\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex)+ IncorrectWord + \"|\"\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (StartDeleteMistake) {\n\t\n\t\t\t\t\t\t\tif (MistakeWordCount <= 0){\n\t\t\t\t\t\t\t\tStartDeleteMistake = false\n\t\t\t\t\t\t\t\tMistakeWordCount = 0\n\t\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMistakeWordCount --\n\t\t\t\t\t\t\t// console.log(IncorrectWord.substring(0, MistakeWordCount))\n\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (Math.random() <= Typingmistakechance){\n\t\t\t\t\t\t\t\tIncorrectWord = \"\"\n\t\t\t\t\t\t\t\tStartMistakeWord = true\n\t\t\t\t\t\t\t\tStartDeleteMistake = false\n\t\t\t\t\t\t\t\tTotalMistakewords = MaxMistakeWord * Math.random() | 0\n\t\t\t\t\t\t\t\tMistakeWordCount = 0\n\n\t\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord + \"|\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCurretTypedIndex ++\n\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + \"|\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} \n\t\tif (enableAnimatedScroll & !StartTypeInAnimation){\n\t\t\tif (enablePause){\n\t\t\t\tif (pauseCounter >= pauseDuration){\n\t\t\t\t\tpauseCounter = 0\n\t\t\t\t\tenablePause = false\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpauseCounter += 1\n\t\t\t\t}\n\t\t\t\treturn currentTitle\n\t\t\t} else if (enableScrollCoolDown){\n\t\t\t\tif (scrollCooldownCounter >= scrollCooldownduration){\n\t\t\t\t\tscrollCooldownCounter = 0\n\t\t\t\t\tenableScrollCoolDown = false\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscrollCooldownCounter += 1\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t} else if (enablePauseEnd) {\n\t\t\t\tif (pauseEndCounter >= pauseEndDuration){\n\t\t\t\t\tpauseEndCounter = 0\n\t\t\t\t\tenablePauseEnd = false\n\t\t\t\t\tenablePause = true\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpauseEndCounter += 1\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t} else {\n\t\t\t\tdisplayTitle = currentTitle.substring(animatedCounter)\n\t\t\t\tvar dummySongTitleScrollSizeX = thisScene.getLayer(\"DummySongTitleScroll\").size.x\n\t\t\t\tif (dummySongTitleScrollSizeX <= displayLength){\n\t\t\t\t\tanimatedCounter = 0\n\t\t\t\t\tenablePauseEnd = true\n\t\t\t\t} else {\n\t\t\t\t\tanimatedCounter ++\n\t\t\t\t\tenableScrollCoolDown = true\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t}\n\t\t} else {\n\t\t\treturn currentTitle\n\t\t}\n\t} else {\n\t\tLastMusicState = CurrentMusicState\n\t}\n\n}",
				"value" : "SONG NAME"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1465, 1142, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"castshadow" : false,
			"id" : 247,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"castshadow" : false,
			"id" : 591,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "right",
			"id" : 1126,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Song Pos bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1500) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1180) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1500) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1180) * userScale.y);\n// \treturn value\n// }\n\n\n\n",
				"value" : "593.15796 270.58154 0.00000"
			},
			"padding" : 32,
			"pointsize" : 3.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "51.00000 19.00000",
			"text" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\n\n\nvar PredictedMediaTime = 0\nvar CurrentUpdateMediaTime = 0\nvar TotalDuration = 0\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar currentState = 0\n\nfunction ConvertSecondToMinSecTxt(seconds){\n\n\tvar minutes = new Number(Math.floor(seconds / 60));\n\tseconds = new Number(Math.floor(seconds - minutes * 60));\n\n\tif (seconds < 10){\n\t\tseconds = \"0\" + seconds\n\t}\n\n\treturn minutes + \":\" + seconds\n\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tcurrentState = event.state;\n}\n\n\n\nexport function mediaTimelineChanged(event) {\n\n\tCurrentUpdateMediaTime = event.position\n\tTotalDuration = event.duration\n\tPredictedMediaTime = CurrentUpdateMediaTime\n\tthisLayer.text = ConvertSecondToMinSecTxt(CurrentUpdateMediaTime)\n}\n\n\nexport function update(value) {\n\n\tif (currentState == MediaPlaybackEvent.PLAYBACK_PLAYING) {\n\t\tPredictedMediaTime += engine.frametime\n\t\tif (PredictedMediaTime >= TotalDuration){\n\t\t\tPredictedMediaTime = TotalDuration\n\t\t}\n\t\treturn ConvertSecondToMinSecTxt(PredictedMediaTime)\n\t} else if (currentState == MediaPlaybackEvent.PLAYBACK_PAUSED) {\n\t\t//pass\n\t\t//console.log(\"not playing\")\n\t} else {\n\t\t//AccumulateFrameTime = 0\n\t\tPredictedMediaTime = 0\n\t}\n\t\n\treturn value;\n}\n",
				"value" : "000:00"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1500, 1180, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"alignment" : "left",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"id" : 324,
			"image" : "models/util/solidlayer.json",
			"locktransforms" : true,
			"name" : "Duration Bar bkp",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\t// var userScale = changedUserProperties.scale\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1502) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1176) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1502) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1179) * userScale.y);\n// \treturn value\n// }",
				"value" : "625.23505 272.40698 0.00000"
			},
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2877039332';\nimport * as WEMath from 'WEMath';\n\n//--Global Data--\n// Your duration bar's x scale\nvar userScale = 1;\nvar MaxScale = 1.45;\nvar CurrentScale = 0;\n\n// How long media is into the track in seconds\nvar position = 0;\n\n// How long media is in seconds\nvar duration = 0;\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar currentState = 0;\n\nvar AccumulateFrameTime = 0\nvar AccumulateDuration = 1\n\n//--------------------------------------------------------------------------------------------\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n        // Assign the changed property to a local variable\n        userScale = changedUserProperties.scale;\n\t\tthisLayer.scale.x = (position/duration) * MaxScale * userScale \n\t\tthisLayer.scale.y = 0.05 * userScale\n    }\n}\n\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t// The bar will move while a song is playing, if paused it will adjust to where the user \t\tmoves the position of the song to \n\tif (currentState == MediaPlaybackEvent.PLAYBACK_PLAYING) {\n\t\t// Thank you https://steamcommunity.com/id/XerRag\n\t\t// position += engine.frametime;\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\t// position += engine.frametime;\n\t\t// console.log(engine.frametime)\n\t\tAccumulateFrameTime += engine.frametime\n\t\tif (AccumulateFrameTime >= AccumulateDuration){\n\t\t\tposition += AccumulateFrameTime\n\t\t\tAccumulateFrameTime = 0\n\t\t}\n\t\tif (position >= duration){\n\t\t\tposition = duration\n\t\t}\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else if (currentState == MediaPlaybackEvent.PLAYBACK_PAUSED) {\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else {\n\t\tAccumulateFrameTime = 0\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaTimelineEvent} event\n */\nexport function mediaTimelineChanged(event) {\n\tposition = event.position;\n\tduration = event.duration;\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tcurrentState = event.state;\n}\n",
				"value" : "1.45000 0.05000 0.50000"
			},
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1502, 1176, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"alignment" : "left",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"id" : 343,
			"image" : "models/util/solidlayer.json",
			"locktransforms" : true,
			"name" : "Total Duration Bar bkp",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1502) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1170) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1502) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1170) * userScale.y);\n// \treturn value\n// }",
				"value" : "624.26648 263.17017 0.00000"
			},
			"scale" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\n\tvar userScale = thisScene.getLayer(\"mainClock\").scale\n\tvalue.x = 1.45 * userScale.x;\n\tvalue.y = 0.005 * userScale.y;\n\treturn value;\n}",
				"value" : "1.45000 0.00500 1.00000"
			},
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1502, 1170, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"castshadow" : false,
			"id" : 105,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"alpha" : 0.5,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 125,
			"image" : "models/workshop/3187908708/Date Area.json",
			"name" : "Date Area",
			"origin" : "980.63428 543.51569 0.00000",
			"scale" : "0.51679 0.51679 0.51679",
			"size" : "1920.00000 313.00000",
			"visible" : false
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/MobileFontEDIT.ttf",
			"horizontalalign" : "right",
			"id" : 89,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallClock bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\nvar OriginX\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n \tHalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 2055) * userScale.x), \n\t\tHalfY - ((HalfY - 1200) * userScale.x), \n\t\tthisLayer.origin.z)\n\t}\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 2055) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1200) * userScale.y);\n// \treturn value\n// }",
				"value" : "847.05908 42.03151 0.00000"
			},
			"padding" : 32,
			"pointsize" : 5.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "130.00000 21.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : 
					{
						"user" : "showseconds",
						"value" : false
					},
					"use24hFormat" : 
					{
						"user" : "use24hformat",
						"value" : true
					}
				},
				"value" : "01:23:45 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1200, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "right",
			"id" : 87,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallDate bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 2055) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1180) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 2055) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1175) * userScale.y);\n// \treturn value\n// }",
				"value" : "1623.60071 149.90961 0.00000"
			},
			"padding" : 32,
			"pointsize" : 3.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "43.00000 19.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2108644365';\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEB',\n      'MAR',\n      'APR',\n      'MAY',\n      'JUN',\n      'JUL',\n      'AUG',\n      'SEP',\n      'OCT',\n      'NOV',\n      'DEC'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Sun',\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      '\\nSat'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      // return day[date.getDay()] + newLine + ' ' + date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n      return date.getFullYear() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getDate() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return months[date.getMonth()] + delimiterValue + currentDate\n      // return months[date.getMonth()] + delimiterValue + date.getDate() + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "",
					"alignVertical" : false,
					"dayFormat" : "1",
					"monthFormat" : "2",
					"showDay" : 
					{
						"user" : "switchdatenotation",
						"value" : false
					},
					"useDelimiter" : false
				},
				"value" : "JUL06"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1180, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "right",
			"id" : 103,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallClock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\nvar OriginX\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n \tHalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "385.49225 230.70850 0.00000"
			},
			"padding" : 32,
			"pointsize" : 3.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "74.00000 15.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : 
					{
						"user" : "showseconds",
						"value" : false
					},
					"use24hFormat" : 
					{
						"user" : "use24hformat",
						"value" : true
					}
				},
				"value" : "01:23:45 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1200, 0)\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "right",
			"id" : 101,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallDate",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "319.93073 230.90335 0.00000"
			},
			"padding" : 32,
			"pointsize" : 3.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "35.00000 15.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2108644365';\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEB',\n      'MAR',\n      'APR',\n      'MAY',\n      'JUN',\n      'JUL',\n      'AUG',\n      'SEP',\n      'OCT',\n      'NOV',\n      'DEC'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Sun',\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      '\\nSat'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      // return day[date.getDay()] + newLine + ' ' + date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n      return date.getFullYear() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getDate() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return months[date.getMonth()] + delimiterValue + currentDate\n      // return months[date.getMonth()] + delimiterValue + date.getDate() + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : ":",
					"alignVertical" : true,
					"dayFormat" : "1",
					"monthFormat" : "2",
					"showDay" : 
					{
						"user" : "switchdatenotation",
						"value" : false
					},
					"useDelimiter" : true
				},
				"value" : "JUL06"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1180, 0)\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"castshadow" : false,
			"id" : 104,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"alpha" : 0.69,
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "center",
			"id" : 34,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainDate original",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1682) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1120) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1682) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1110) * userScale.y);\n// \treturn value\n// }\n\n",
				"value" : "1722.43896 932.45221 0.00000"
			},
			"padding" : 32,
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "132.00000 50.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2108644365';\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEB',\n      'MAR',\n      'APR',\n      'MAY',\n      'JUN',\n      'JUL',\n      'AUG',\n      'SEP',\n      'OCT',\n      'NOV',\n      'DEC'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Sun',\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      '\\nSat'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      // return day[date.getDay()] + newLine + ' ' + date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n      return date.getFullYear() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getDate() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return months[date.getMonth()] + delimiterValue + currentDate\n      // return months[date.getMonth()] + delimiterValue + date.getDate() + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "",
					"alignVertical" : false,
					"dayFormat" : "2",
					"monthFormat" : "2",
					"showDay" : false,
					"useDelimiter" : false
				},
				"value" : "JUL 05"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1120, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"alpha" : 0.69,
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/MobileFontEDIT.ttf",
			"horizontalalign" : "center",
			"id" : 51,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainClock original",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1682) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1195) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tthisLayer.origin.x = HalfX - ((HalfX - 1682) * userScale.x);\n// \tthisLayer.scale.y = HalfY - ((HalfY - 1195) * userScale.y);\n// \treturn value\n// }\n\n",
				"value" : "1729.27124 1017.38635 0.00000"
			},
			"padding" : 32,
			"pointsize" : 20.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "405.00000 84.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : true,
					"use24hFormat" : true
				},
				"value" : "12:34 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1193.57, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"alpha" : 0.69,
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "center",
			"id" : 723,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainDate BKP ingles",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "1722.43896 932.45221 0.00000"
			},
			"padding" : 32,
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "132.00000 50.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2108644365';\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEB',\n      'MAR',\n      'APR',\n      'MAY',\n      'JUN',\n      'JUL',\n      'AUG',\n      'SEP',\n      'OCT',\n      'NOV',\n      'DEC'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Sun',\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      '\\nSat'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      // return day[date.getDay()] + newLine + ' ' + date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n      return date.getFullYear() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getDate() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return months[date.getMonth()] + delimiterValue + currentDate\n      // return months[date.getMonth()] + delimiterValue + date.getDate() + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "",
					"alignVertical" : false,
					"dayFormat" : "2",
					"monthFormat" : "2",
					"showDay" : false,
					"useDelimiter" : false
				},
				"value" : "JUL 05"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1120, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"id" : 212,
			"instanceoverride" : null,
			"name" : "Bokeh Hex",
			"origin" : "1665.38354 776.41711 0.00000",
			"particle" : "particles/workshop/2820123291/bokeh_Hex.json",
			"scale" : "0.55421 0.55421 1.00000"
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "center",
			"id" : 81,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : true,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainDate bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "1680.43140 133.65358 0.00000"
			},
			"padding" : 32,
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "110.00000 41.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2108644365';\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n       'JAN',\n      'FEV',\n      'MAR',\n      'ABR',\n      'MAI',\n      'JUN',\n      'JUL',\n      'AGO',\n      'SET',\n      'OUT',\n      'NOV',\n      'DEZ'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Dom',\n      'Seg',\n      'Ter',\n      'Qua',\n      'Qui',\n      'Sex',\n      '\\nSab'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Domingo',\n      'Segunda',\n      'Terça',\n      'Quarta',\n      'Quinta',\n      'Sexta',\n      'Sábado'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      // return day[date.getDay()] + newLine + ' ' + date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n      return date.getFullYear() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getDate() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return months[date.getMonth()] + delimiterValue + currentDate\n      // return months[date.getMonth()] + delimiterValue + date.getDate() + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "/",
					"alignVertical" : true,
					"dayFormat" : "2",
					"monthFormat" : "3",
					"showDay" : true,
					"useDelimiter" : true
				},
				"value" : "JUL 05"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1120, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"castshadow" : false,
			"id" : 129,
			"image" : "models/util/projectlayer.json",
			"name" : "------------------------------",
			"origin" : "960.00000 540.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"size" : "1920.00000 1080.00000"
		},
		{
			"alignment" : "bottom",
			"alpha" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -3.5699999
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.5638655,
								"y" : -0.12631142
							},
							"frame" : 32,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.5638655,
								"y" : 0.12631142
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.60300255
						}
					],
					"options" : 
					{
						"fps" : 60,
						"length" : 60,
						"mode" : "single",
						"startpaused" : true,
						"wraploop" : null
					}
				},
				"script" : "/*\n*  Transformierend: Media Area, Skalierung\n*/\n'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\n\t//if new thumbnail has been received play animation\n\tif (thisLayer.visible == true) {\n\t\tthisLayer.alpha = 0;\n\t\tthisObject.getAnimation().play();\n\t}\n\telse {\n\t\treturn\n\t}\n}\n",
				"value" : 0.80000001
			},
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    targetColor = event.primaryColor;\n}",
				"value" : "1.00000 1.00000 1.00000"
			},
			"effects" : 
			[
				{
					"file" : "effects/workshop/2084198056/Simple_Audio_Bars/effect.json",
					"id" : 72,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 31,
								"CLIP_HIGH" : 1,
								"CLIP_LOW" : 1,
								"RESOLUTION" : 16,
								"SHAPE" : 9,
								"TRANSPARENCY" : 0
							},
							"constantshadervalues" : 
							{
								"Anti-alias blurring" : "0.01 0.01",
								"Bar Color" : 
								{
									"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    targetColor = event.primaryColor;\n}",
									"value" : "1.00000 1.00000 1.00000"
								},
								"Bar Count" : 24.84,
								"Bar Spacing" : 0.11,
								"Lower/Upper Bar Bounds" : "0 0.56",
								"ui_editor_properties_opacity" : 0.76999998
							},
							"id" : 73
						}
					],
					"visible" : true
				}
			],
			"id" : 114,
			"image" : "models/workshop/3187908708/Media Area.json",
			"name" : "Media Area",
			"origin" : "210.74802 106.34262 0.00000",
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.85714287,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.21032999
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.85714287,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.21032999
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.66666669,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.30645996
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.83333331,
								"y" : -0.051679
							},
							"frame" : 15,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0.034452666
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.25353998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.60000002,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.21032999
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.85714287,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.51678997
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.85714287,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.51678997
						}
					],
					"options" : 
					{
						"fps" : 60,
						"length" : 60,
						"mode" : "single",
						"name" : "Init Media Area",
						"startpaused" : true,
						"wraploop" : null
					}
				},
				"script" : "/*\n*  Transformierend: Media Area, Skalierung !!!\n*/\n'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\t\n\t//if new thumbnail has been received play animation\n\tif (thisLayer.visible == true) {\n\t\tthisLayer.alpha = 0;\n\t\tthisObject.getAnimation().play();\n\t}\n\telse {\n\t\treturn\n\t}\n}\n",
				"value" : "0.21033 0.21033 0.51679"
			},
			"size" : "1920.00000 845.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\nexport let __workshopId = '3187908708';\n\nexport function init(value) {\n    if (thisLayer.visible == true) {\n        thisLayer.alpha = 1;\n    }\n}\n\nexport function mediaPlaybackChanged(event) {\n    if (event.state === MediaPlaybackEvent.PLAYBACK_PLAYING) {\n        thisLayer.alpha = 0.25; // A camada é 25% visível\n        thisLayer.visible = true;\n    } else {\n        thisLayer.alpha = 0;\n        thisLayer.visible = false;\n    }\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : true,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "left",
			"id" : 278,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : true,
			"maxrows" : 2,
			"maxwidth" : 1214.2878,
			"name" : "Song Title",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "-335.16476 602.73755 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "385.00000 76.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\n\nvar currentTitle = \"\"\nvar animatedCounter = 0\nvar scrollCooldownCounter = 0\nvar scrollCooldownduration = 20\nvar enableScrollCoolDown = false\nvar enableAnimatedScroll = false\nvar displayTitle = \"\"\nvar displayLength = 593\nvar enablePauseEnd = false\nvar pauseEndCounter = 0\nvar pauseEndDuration = 200\nvar pauseDuration = 600\nvar pauseCounter = 0\nvar enablePause = false\n\n\nvar EnableTypeInAnimation = false\nvar EnableTypingDelay = false\nvar TypingDelayCount = 0\nvar TypingDelayDuration\nvar CurretTypedIndex = 0\nvar MaxTypingDelay = 20\nvar MinTypingDelay = 10\n\nvar EnableTypingMistake = true\nvar StartTypeInAnimation\nvar Typingmistakechance = 0.5\nvar MistakeWordCount = 0\nvar MaxMistakeWord = 3\nvar TotalMistakewords = 0\nvar StartMistakeWord = false\nvar StartDeleteMistake = false\nvar IncorrectWord = \"\"\nvar PossibleMistakeString = \"1234567890-=qwertyuiop[]asdfghjkl;'zxcvbnm,./\"\n\n// // Media is Playing: 1\n// // Media is Paused: 2\n// // Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar enablePauseAtStart = false\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('maxtypingdelay')) {\n\t\t\tMaxTypingDelay = changedUserProperties.maxtypingdelay\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('mintypingdelay')) {\n\t\t\tMinTypingDelay = changedUserProperties.mintypingdelay\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('typingmistakechance')){\n\t\t\tTypingmistakechance = changedUserProperties.typingmistakechance\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"enabletypingmistake\")){\n\t\t\tEnableTypingMistake = changedUserProperties.enabletypingmistake\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"enabletypinganimation\")){\n\t\t\tEnableTypeInAnimation = changedUserProperties.enabletypinganimation\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty(\"maxmistakeword\")){\n\t\t\tMaxMistakeWord = changedUserProperties.maxmistakeword\n\t\t}\n}\n\nfunction initTypingDelay(factor){\n\tEnableTypingDelay = true\n\tTypingDelayCount = 0\n\tTypingDelayDuration = new Number(Math.random() * (MaxTypingDelay - MinTypingDelay) * factor) + MinTypingDelay\n\t// console.log(\"delay\",TypingDelayDuration)\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function mediaPropertiesChanged(event) {\n\tcurrentTitle = event.title;\n\tdisplayTitle = currentTitle\n\n\tenablePauseAtStart = true\n\n\tif (EnableTypeInAnimation) {\n\t\tif (MinTypingDelay >= MaxTypingDelay){\n\t\t\tvar temp = MinTypingDelay\n\t\t\tMinTypingDelay = MaxTypingDelay\n\t\t\tMaxTypingDelay = temp\n\t\t}\n\t\tTypingDelayDuration = new Number(Math.random() * (MaxTypingDelay - MinTypingDelay)) + MinTypingDelay\n\t\tCurretTypedIndex = 0\n\t\tStartTypeInAnimation = true\n\t\tinitTypingDelay(1)\n\t}\n}\n\nexport function update(value) {\n\tvar dummySongTitleSizeX = thisScene.getLayer(\"DummySongTitle\").size.x\n\tenableAnimatedScroll = false\n\tif (dummySongTitleSizeX > thisLayer.maxwidth){\n\t\tenableAnimatedScroll = true\n\t\tif (enablePauseAtStart == true){\n\t\t\tenablePauseAtStart = false\n\t\t\tenablePause = true\n\t\t}\n\t}\n\t// console.log(dummySongTitleSizeX)\n\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\tif (LastMusicState != CurrentMusicState){\n\t\t\tLastMusicState = CurrentMusicState\n\t\t\tif (EnableTypeInAnimation){\n\t\t\t\tCurretTypedIndex = 0\n\t\t\t\tStartTypeInAnimation = true\n\t\t\t\tinitTypingDelay(1)\n\t\t\t}\n\t\t}\n\t\tif (EnableTypeInAnimation){\n\t\t\tif (StartTypeInAnimation) {\n\t\t\t\tif (CurretTypedIndex >= currentTitle.length){\n\t\t\t\t\tStartTypeInAnimation = false\n\t\t\t\t\tCurretTypedIndex = 0\n\t\t\t\t\tEnableTypingDelay = false\n\t\t\t\t} else {\n\t\t\t\t\tif (EnableTypingDelay){\n\t\t\t\t\t\tif (TypingDelayCount >= TypingDelayDuration){\n\t\t\t\t\t\t\tTypingDelayCount = 0\n\t\t\t\t\t\t\tEnableTypingDelay = false\n\t\t\t\t\t\t} \n\t\t\t\t\t\tTypingDelayCount ++\n\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\n\t\t\t\t\t} \n\t\t\t\t\tinitTypingDelay(1)\n\t\t\t\t\tif (EnableTypingMistake){\n\t\t\t\t\t\tif (StartMistakeWord)\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\tif (MistakeWordCount >= TotalMistakewords){\n\t\t\t\t\t\t\t\tStartDeleteMistake = true\n\t\t\t\t\t\t\t\tStartMistakeWord = false\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tIncorrectWord += PossibleMistakeString[PossibleMistakeString.length * Math.random() | 0]\n\t\t\t\t\t\t\tMistakeWordCount ++\n\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex)+ IncorrectWord + \"|\"\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (StartDeleteMistake) {\n\t\n\t\t\t\t\t\t\tif (MistakeWordCount <= 0){\n\t\t\t\t\t\t\t\tStartDeleteMistake = false\n\t\t\t\t\t\t\t\tMistakeWordCount = 0\n\t\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMistakeWordCount --\n\t\t\t\t\t\t\t// console.log(IncorrectWord.substring(0, MistakeWordCount))\n\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord.substring(0, MistakeWordCount) + \"|\"\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (Math.random() <= Typingmistakechance){\n\t\t\t\t\t\t\t\tIncorrectWord = \"\"\n\t\t\t\t\t\t\t\tStartMistakeWord = true\n\t\t\t\t\t\t\t\tStartDeleteMistake = false\n\t\t\t\t\t\t\t\tTotalMistakewords = MaxMistakeWord * Math.random() | 0\n\t\t\t\t\t\t\t\tMistakeWordCount = 0\n\n\t\t\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + IncorrectWord + \"|\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCurretTypedIndex ++\n\t\t\t\t\t\treturn currentTitle.substring(0, CurretTypedIndex) + \"|\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} \n\t\tif (enableAnimatedScroll & !StartTypeInAnimation){\n\t\t\tif (enablePause){\n\t\t\t\tif (pauseCounter >= pauseDuration){\n\t\t\t\t\tpauseCounter = 0\n\t\t\t\t\tenablePause = false\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpauseCounter += 1\n\t\t\t\t}\n\t\t\t\treturn currentTitle\n\t\t\t} else if (enableScrollCoolDown){\n\t\t\t\tif (scrollCooldownCounter >= scrollCooldownduration){\n\t\t\t\t\tscrollCooldownCounter = 0\n\t\t\t\t\tenableScrollCoolDown = false\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscrollCooldownCounter += 1\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t} else if (enablePauseEnd) {\n\t\t\t\tif (pauseEndCounter >= pauseEndDuration){\n\t\t\t\t\tpauseEndCounter = 0\n\t\t\t\t\tenablePauseEnd = false\n\t\t\t\t\tenablePause = true\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpauseEndCounter += 1\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t} else {\n\t\t\t\tdisplayTitle = currentTitle.substring(animatedCounter)\n\t\t\t\tvar dummySongTitleScrollSizeX = thisScene.getLayer(\"DummySongTitleScroll\").size.x\n\t\t\t\tif (dummySongTitleScrollSizeX <= displayLength){\n\t\t\t\t\tanimatedCounter = 0\n\t\t\t\t\tenablePauseEnd = true\n\t\t\t\t} else {\n\t\t\t\t\tanimatedCounter ++\n\t\t\t\t\tenableScrollCoolDown = true\n\t\t\t\t}\n\t\t\t\treturn displayTitle\n\t\t\t}\n\t\t} else {\n\t\t\treturn currentTitle\n\t\t}\n\t} else {\n\t\tLastMusicState = CurrentMusicState\n\t}\n\n}",
				"value" : "SONG NAME"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1465, 1142, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "left",
			"id" : 266,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : true,
			"maxrows" : 1,
			"maxwidth" : 1200.1189,
			"name" : "Artist Title",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "-336.10349 421.39746 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "427.00000 76.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\n\n\n\nvar currentTitle = \"\"\nvar animatedCounter = 0\nvar scrollCooldownCounter = 0\nvar scrollCooldownduration = 20\nvar enableScrollCoolDown = false\nvar enableAnimatedScroll = false\nvar displayTitle = \"\"\nvar displayLength = 572\nvar enablePauseEnd = false\nvar pauseEndCounter = 0\nvar pauseEndDuration = 100\nvar pauseDuration = 600\nvar pauseCounter = 0\nvar enablePause = false\nvar easterEggProb = 0.3\n\n\nvar EasterEggMode\nvar OriginalArtistTitle = \"\"\nvar SongTitle = \"\"\nvar EasterEggTitle = \"\"\nlet EasterEggsTable = {\n\t\"pewdiepie\": \"Gloria Borger\",\n\t\"markiplier\": \"Markimoo\",\n\t\"penguinz0\": \"Jesus\",\n\t\"eminem\": \"Rap God\",\n\t\"mrbeast\": \"Burger Shop CEO\",\n\t\"jacksepticeye\": \"Irish Fellow\",\n\t\"pinkfong\": \"Make it stop!\",\n\t\"taylor swift\": \"Tay Tay\",\n\t\"snoop dogg\": \"The Guy Who Smoke Weed Everyday\",\n\t\"basically homeless\": \"Virus Guy\",\n\t\"\": [\"No idea who this is...\", \"???\", \"??!\", \"?!?\", \"!!!\", \"...\"]\n\n}\n\nlet EasterEggsSongTitleTable = {\n\t\"XVIDEO\": [\"Really?\", \"Oh that's hot\", \"BigDong9000\", \"...\", \"Wow, this is just... wow\"],\n\t\"PORNHUB\": [\"Ron Jeremy\"],\n\t\"e621\": [\"OwO\", \"UwU\", \"OwO *notice your bulge*\", \"NSFW!\", \"YCH\"] \n}\n\nvar enablePauseAtStart = false\n\nfunction updateEasterEggsName(){\n\tvar isKeyWorldinTitle = false\n\tvar keywordTitle = \"\"\n\tfor (var key in EasterEggsSongTitleTable){\n\t\t// console.log(key)\n\t\t// console.log(SongTitle)\n\t\t// console.log(SongTitle.includes(key))\n\t\tif (SongTitle.includes(key)){\n\t\t\tisKeyWorldinTitle = true\n\t\t\tkeywordTitle = key\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (EasterEggMode && (OriginalArtistTitle.toLowerCase() in EasterEggsTable || isKeyWorldinTitle) && Math.random() <= easterEggProb){\n\t\t// console.log('easter')\n\t\tif (isKeyWorldinTitle && keywordTitle != \"\"){\n\t\t\tvar easterEggsSongTitleTableContent = EasterEggsSongTitleTable[keywordTitle]\n\t\t\t// console.log(easterEggsSongTitleTableContent)\n\t\t\tif (typeof easterEggsSongTitleTableContent == 'string'){\n\t\t\t\tEasterEggTitle = easterEggsSongTitleTableContent\n\n\t\t\t} else {\n\t\t\t\tEasterEggTitle = easterEggsSongTitleTableContent[Math.floor(Math.random() * easterEggsSongTitleTableContent.length)]\n\t\t\t}\n\t\t} else {\n\n\t\t\tvar easterEggsTableContent = EasterEggsTable[OriginalArtistTitle.toLowerCase()]\n\t\t\tif (typeof easterEggsTableContent == 'string'){\n\t\t\t\tEasterEggTitle = easterEggsTableContent\n\t\t\t} else {\n\t\t\t\tEasterEggTitle = easterEggsTableContent[Math.floor(Math.random() * easterEggsTableContent.length)]\n\t\t\t}\n\t\t}\n\t\tcurrentTitle = EasterEggTitle\n\t} else {\n\t\tcurrentTitle = OriginalArtistTitle\n\t}\n\tif (currentTitle == \"\"){\n\t\tcurrentTitle = \"???\"\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tif (event.state == 1){\n\t\tupdateEasterEggsName()\n\t}\t\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('eastereggsmode')) {\n\t\t\tEasterEggMode = changedUserProperties.eastereggsmode\n\t\t\tupdateEasterEggsName()\n\t\t\tvar DummyArtistTitle = thisScene.getLayer(\"DummyArtistTitle\")\n\t\t\tDummyArtistTitle.text = currentTitle\n\t\t}\n}\n\nexport function mediaPropertiesChanged(event) {\n\n\tSongTitle = event.title\n\n\tvar tempCurrentTitle = \"\"\n\tif (event.artist !== \"\"){\n\t\ttempCurrentTitle = event.artist;\n\t} else {\n\t\ttempCurrentTitle = event.albumArtist\n\t}\n\n\tif (event.albumTitle !== \"\"){\n\t\t// console.log(tempCurrentTitle.indexOf(event.albumTitle))\n\t\tif(tempCurrentTitle.includes(event.albumTitle) !== true) {\n\t\t\ttempCurrentTitle += \"  —  \"\n\t\t\ttempCurrentTitle += event.albumTitle\n\t\t}\n\n\t}\n\tcurrentTitle = tempCurrentTitle\n\tOriginalArtistTitle = currentTitle\n\tupdateEasterEggsName()\n\tthisLayer.text = currentTitle\n\tdisplayTitle = currentTitle\n\tenablePauseAtStart = true\n\tvar DummyArtistTitle = thisScene.getLayer(\"DummyArtistTitle\")\n\tDummyArtistTitle.text = currentTitle\n}\n\nexport function update(value) {\n\tvar dummyArtistTitleSizeX = thisScene.getLayer(\"DummyArtistTitle\").size.x\n\tenableAnimatedScroll = false\n\tif (dummyArtistTitleSizeX > thisLayer.maxwidth){\n\t\tenableAnimatedScroll = true\n\t\tif (enablePauseAtStart == true){\n\t\t\tenablePauseAtStart = false\n\t\t\tenablePause = true\n\t\t}\n\t}\n\t// console.log(thisLayer.maxwidth)\n\t// console.log(dummyArtistTitleSizeX)\n\tif (enableAnimatedScroll){\n\t\tif (enablePause){\n\t\t\tif (pauseCounter >= pauseDuration){\n\t\t\t\tpauseCounter = 0\n\t\t\t\tenablePause = false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpauseCounter += 1\n\t\t\t}\n\t\t\treturn currentTitle\n\t\t} else if (enableScrollCoolDown){\n\t\t\tif (scrollCooldownCounter >= scrollCooldownduration){\n\t\t\t\tscrollCooldownCounter = 0\n\t\t\t\tenableScrollCoolDown = false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollCooldownCounter += 1\n\t\t\t}\n\t\t\treturn displayTitle\n\t\t} else if (enablePauseEnd) {\n\t\t\tif (pauseEndCounter >= pauseEndDuration){\n\t\t\t\tpauseEndCounter = 0\n\t\t\t\tenablePauseEnd = false\n\t\t\t\tenablePause = true\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpauseEndCounter += 1\n\t\t\t}\n\t\t\treturn displayTitle\n\t\t} else {\n\t\t\tdisplayTitle = currentTitle.substring(animatedCounter)\n\t\t\tvar dummyArtistTitleSizeXScroll = thisScene.getLayer(\"DummyArtistTitleScroll\").size.x\n\t\t\t// console.log(dummyArtistTitleSizeXScroll)\n\t\t\tif (dummyArtistTitleSizeXScroll <= displayLength){\n\t\t\t\tanimatedCounter = 0\n\t\t\t\tenablePauseEnd = true\n\t\t\t} else {\n\t\t\t\tanimatedCounter ++\n\t\t\t\tenableScrollCoolDown = true\n\t\t\t}\n\n\t\t\t// if (animatedCounter ++ >= (currentTitle.length - displayLength)){\n\t\t\t// \tanimatedCounter = 0\n\t\t\t// \tenablePauseEnd = true\n\t\t\t// } else {\n\t\t\t// \tanimatedCounter += 1\n\t\t\t// \tenableScrollCoolDown = true\n\t\t\t// }\n\t\t\treturn displayTitle\n\t\t}\n\t} else {\n\t\treturn currentTitle\n\t}\n\n}\n",
				"value" : "ARTIST NAME"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1480, 1100, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n    // Não faz nada com a posição do objeto\n}\n",
				"value" : "0.00000 -0.00000 0.00000"
			},
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "right",
			"id" : 111,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Song Pos",
			"opaquebackground" : false,
			"origin" : "-693.60925 146.08755 0.00000",
			"padding" : 32,
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "223.00000 76.00000",
			"text" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\n\n\nvar PredictedMediaTime = 0\nvar CurrentUpdateMediaTime = 0\nvar TotalDuration = 0\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar currentState = 0\n\nfunction ConvertSecondToMinSecTxt(seconds){\n\n\tvar minutes = new Number(Math.floor(seconds / 60));\n\tseconds = new Number(Math.floor(seconds - minutes * 60));\n\n\tif (seconds < 10){\n\t\tseconds = \"0\" + seconds\n\t}\n\n\treturn minutes + \":\" + seconds\n\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tcurrentState = event.state;\n}\n\n\n\nexport function mediaTimelineChanged(event) {\n\n\tCurrentUpdateMediaTime = event.position\n\tTotalDuration = event.duration\n\tPredictedMediaTime = CurrentUpdateMediaTime\n\tthisLayer.text = ConvertSecondToMinSecTxt(CurrentUpdateMediaTime)\n}\n\n\nexport function update(value) {\n\n\tif (currentState == MediaPlaybackEvent.PLAYBACK_PLAYING) {\n\t\tPredictedMediaTime += engine.frametime\n\t\tif (PredictedMediaTime >= TotalDuration){\n\t\t\tPredictedMediaTime = TotalDuration\n\t\t}\n\t\treturn ConvertSecondToMinSecTxt(PredictedMediaTime)\n\t} else if (currentState == MediaPlaybackEvent.PLAYBACK_PAUSED) {\n\t\t//pass\n\t\t//console.log(\"not playing\")\n\t} else {\n\t\t//AccumulateFrameTime = 0\n\t\tPredictedMediaTime = 0\n\t}\n\t\n\treturn value;\n}\n",
				"value" : "000:00"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1500, 1180, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX, HalfY, thisLayer.origin.z)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "left",
			"id" : 284,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Song Duration",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "695.29749 146.10751 0.00000"
			},
			"padding" : 32,
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "223.00000 76.00000",
			"text" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\n\nfunction str_pad_left(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n\nexport function mediaTimelineChanged(event) {\n\t\n\tvar currentTime = event.duration\n\tvar minutes = Math.floor(currentTime / 60);\n\tvar seconds = currentTime - minutes * 60;\n\n\tif (seconds < 10){\n\t\tseconds = \"0\" + seconds\n\t}\n\n\tthisLayer.text = minutes + \":\" + seconds\n\n\t//thisLayer.text = str_pad_left(minutes, '0', 2) + ':' + str_pad_left(seconds, '0', 2);\n}\n\n\nexport function update(value) {\n\n\n\t\n\treturn value;\n}\n",
				"value" : "000:00"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"alpha" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({ //Values for this property might need to be changed according to the effect that is beeing tied to this script.\n\t\tname: 'minValue',\n\t\tlabel: 'Min value',\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.addSlider({ //Values for this property might need to be changed according to the effect that is beeing tied to this script.\n\t\tname: 'maxValue',\n\t\tlabel: 'Max value',\n\t\tvalue: 1,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.addCheckbox({ //This enables the variable strenght of the effect based on the strenght of the beat.\n\t\tname: 'adaptiveValue',\n\t\tlabel: 'Adaptive max value',\n\t\tvalue: false\n\t})\n\t.addSlider({ //This is the speed at which the effect is activated during the beat.\n\t\tname: 'beatSpeed',\n\t\tlabel: 'Activation speed',\n\t\tvalue: 0.9,\n\t\tmin: 0.001,\n\t\tmax: 0.999,\n\t\tinteger: false\n\t})\n\t.addSlider({ //This is the speed at which the effect is deactivated after the beat.\n\t\tname: 'endBeatSpeed',\n\t\tlabel: 'Deactivation speed',\n\t\tvalue: 0.1,\n\t\tmin: 0.001,\n\t\tmax: 0.999,\n\t\tinteger: false\n\t})\n\t.addSlider({ //This set the difference needed in audio level between the current frame and the previous one to be recognised as a beat.\n\t//The higher the number the grater the difference.\n\t\tname: 'sensivity',\n\t\tlabel: 'Minimum difference (beat VS no beat)',\n\t\tvalue: 0.05,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t.addSlider({ //This set the tollerance in audio level between the current frame and the average of all the remembered beats to be recognised as a beat.\n\t//The higher the number the lower the tollerance.\n\t\tname: 'tollerance',\n\t\tlabel: 'Difference tollerance (inverted)',\n\t\tvalue: 0.8,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t.addSlider({ //This set the audio level lower limit, below this there's no search for beats.\n\t\tname: 'lowerLimit',\n\t\tlabel: 'Lower audio level threshold',\n\t\tvalue: 0.3,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.addSlider({ //This set the tollerance in audio level between the current frame and the average of all the remembered beats to be recognised as a beat.\n\t//The higher the number the lower the tollerance.\n\t\tname: 'tollerance1',\n\t\tlabel: 'Audio level tollerance (inverted)',\n\t\tvalue: 0.5,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t.addText({ //This set the number of beats to remember and be used as models for the next beat.\n\t//to many and the algorithm won't respond to a sudden change in music, to little and there'll be a lot of inaccurate detections.\n\t\tname: 'nBeats',\n\t\tlabel: 'Beats to remember',\n\t\tvalue: '15'\n\t})\n\t.finish();\n\t\n/**\n * Lower this setting only in case of serious perfomance issues. This set the accuracy at which beats are detected. Must be 16, 32 or 64 per channel.\n */\nconst frequencyResolution = 64; //can be modified for customization\n\n/**\n * The time (in milliseconds) that must pass without any beat to start lowering expected values of the next beat.\n */\nconst timePop = 200; //can be modified for customization\n\n/**\n * The amount of time (in milliseconds) when beats won't be registered after a beat.\n */\nconst offBeatTimer = 0; //can be modified for customization\n\n/**\n * The amount of seconds of non-beat sounds that'll be remembered.\n */\nconst nonBeatSound = 5; //can be modified for customization\n\n/**\n * Sets the priority lower frequencies have over higher ones. 1 same priority, 0 treble are not considered.\n */\nconst bassOverTreble = 0.7; //can be modified for customization\n\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(frequencyResolution);\n\n/**\n * The audio level of the current frame, divided by frequency bands.\n */\nvar audioDelta = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * The audio level of the previous frame, divided by frequency bands.\n */\nvar oldDelta = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * This is to know if a beat is currently appening.\n */\nvar beatOn = false;\n\n/**\n * The list of audio levels of beats remembered, divided by frequency bands.\n * @type {Array<number[]>}\n */\nvar beatsHistory = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n\n/**\n * The list of audio level differences between beats remembered and their previous frame, divided by frequency bands.\n * @type {Array<number[]>}\n */\nvar diffHistory = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n\n/**\n * The list of avarage values between audio level and difference, divided by frequency bands.\n * @type {Array<number[]>}\n */\nvar average = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n\n/**\n * The history of non-beat Audio levels divided by frequency bands.\n * @type {Array<number[]>}\n */\nvar noBeatAudioLevel = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n\n/**\n * The average difference between beat and non-beat audio levels, divided by frequency bands.\n * @type {Array<number[]>}\n */\nvar beatNoBeatDiffHistory = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n\n/**\n * The average audio level value between the remembered beats, divided by frequency bands.\n */\nvar beatsAverage = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * The average difference between audio levels of remembered beats and the frames before them, divided by frequency bands.\n */\nvar diffAverage = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * Indicate how far the beat animation needs to go based on audio level.\n */\nvar modifier = 1;\n\n/**\n * The time, in milliseconds, when the last beat happened.\n */\nvar lastBeat = 0;\n\n/**\n * The frame rate at which the wallpaper is currently running. It'll be calculated automatically.\n */\nvar fps = 60;\n\n/**\n * The time in milliseconds when the current frame is happening.\n */\nvar currentFrame = 0;\n\n/**\n * The time in milliseconds when the previous frame as happened.\n */\nvar oldFrame = 0;\n\n//Temporary variables.\nvar n = 1;\n\n/**\n * Determine whether there's a beat happening or not and manage the beat animation.\n * @param {number} value (the current value of the property)\n * @return {number} the updated value of the property\n */\nexport function update(value) {\n\tlet time = new Date();\n\tlet differences = [];\n\tlet maxAudioDelta = 0;\n\tlet maxDifference = 0;\n\tlet maxAudioDeltaIndex = 0;\n\tcurrentFrame = time.getTime();\n\tfps = 1000 / (currentFrame - oldFrame); //This detects the current frame rate.\n\toldFrame = currentFrame;\n\n\tfor (var i = 0; i < 16; ++i)\n\t\tif (i > 0 && i < 4){ //This decides which frequency bands are to be analyzed. From 0(bass) to 15(treble). Can be modified for customization.\n\t\t\tif (i <= 8) audioDelta[i] = audioBuffer.average[i];\n\t\t\telse audioDelta[i] = audioBuffer.average[i] * bassOverTreble;\n\t\t\tdifferences[i] = audioDelta[i] - oldDelta[i];\n\t\t\taverage[i] = (audioDelta[i] + differences[i] * 1.5) / 2;\n\t\t}\n\n\tfor (var i = 0; i < audioDelta.length; ++i)\n\t\tif (average[i] >= arrayMax(average, i)){\n\t\t\tmaxAudioDelta = audioDelta[i];\n\t\t\tmaxDifference = differences[i];\n\t\t\tmaxAudioDeltaIndex = i;\n\t\t}\n\n\tlet noBeatAudioAvg = arrayAverage(noBeatAudioLevel[maxAudioDeltaIndex]);\n\tlet beatNoBeatDiff = maxAudioDelta - noBeatAudioAvg;\n\t\n\tif (!beatOn){\n\t\tif (maxDifference > Math.max(diffAverage[maxAudioDeltaIndex] * scriptProperties.tollerance, scriptProperties.sensivity, beatNoBeatDiff * 0.5)){\n\t\t\tif (maxAudioDelta > Math.max(beatsAverage[maxAudioDeltaIndex] * scriptProperties.tollerance1, scriptProperties.lowerLimit, noBeatAudioAvg)){\n\t\t\t\tif (scriptProperties.adaptiveValue) modifier = Math.min(Math.max(maxDifference * 2 * (diffAverage[maxAudioDeltaIndex] / maxDifference), 0.2), 1);\n\t\t\t\tvalue = onBeat(value);\n\t\t\t\tupdateBeatsHistory(maxAudioDeltaIndex, time.getTime() - lastBeat);\n\t\t\t\tlastBeat = time.getTime();\n\t\t\t\tupdateNoBeatHistory(maxAudioDeltaIndex);\n\t\t\t} else {\n\t\t\t\tvalue = returnFromBeat(value);\n\t\t\t\tupdateNoBeatHistory();\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = returnFromBeat(value);\n\t\t\tupdateNoBeatHistory();\n\t\t}\n\t} else {\n\t\tvalue = onBeat(value);\n\t\tupdateNoBeatHistory(maxAudioDeltaIndex);\n\t}\n\n\tfor (var i = 0; i < audioDelta.length; ++i) oldDelta[i] = audioDelta[i];\n\treturn value;\n}\n\n/**\n * Returns the maximum value in the provided array. The second parameter is in case you want to know if a certain value is the highest, provide it and the function will exclude it from the search.\n * @param {Array<number>} array\n * @param {number=} index\n * @return {number} the maximum value\n */\nfunction arrayMax(array, index) {\n\tlet value = 0;\n\tfor (var i = 0; i < array.length; ++i){\n\t\tif (value < array[i] && i != index) value = array[i];\n\t}\n\treturn value;\n}\n\n/**\n * Returns the average value in the provided array.\n * @param {Array<number>} array\n * @return {number} the average value\n */\nfunction arrayAverage(array) {\n\tlet value = 0;\n\tlet n = 0;\n\tfor (var i = 0; i < array.length; ++i){\n\t\tif (array[i] != 0){\n\t\t\tvalue += array[i];\n\t\t\tn++;\n\t\t}\n\t}\n\tvalue /= n;\n\treturn value;\n}\n\n/**\n * Returns true if the given amount of time from the last beat is passed, otherwise it returns false.\n * @param {number} ms (the number of milliseconds that needs to pass from the last beat)\n * @return {boolean}\n */\nfunction beatTimer(ms) {\n\tlet time = new Date();\n\tif (time.getTime() - lastBeat > ms) return true;\n\telse return false;\n}\n\n/**\n * Returns the value for the activation of the beat animation.\n * @param {number} value (the current value of the property)\n * @return {number} the updated value of the property\n */\nfunction onBeat(value) {\n\tif (value < ((scriptProperties.maxValue - scriptProperties.minValue) * modifier) * 0.99 + scriptProperties.minValue && beatTimer(offBeatTimer)){\n\t\tvalue += ((scriptProperties.maxValue - value) * modifier) * (scriptProperties.beatSpeed / (fps / 60)) * Math.max(modifier, 0.7)/* * Math.pow((scriptProperties.maxValue - value), 0.1)*/; //Uncomment to add accelleration to the animation. The speed is automatically adjusted to the framerate.\n\t\tvalue = Math.min(value, scriptProperties.maxValue);\n\t\tbeatOn = true;\n\t\treturn value;\n\t}\n\tvalue = returnFromBeat(value);\n\treturn value;\n}\n\n/**\n * Returns the value for the deactivation of the beat animation.\n * @param {number} value (the current value of the property)\n * @return {number} the updated value of the property\n */\nfunction returnFromBeat(value) {\n\tvalue -= (value - scriptProperties.minValue) * (scriptProperties.endBeatSpeed / (fps / 60))/* * Math.pow((value - scriptProperties.minValue), 0.3)*/; //Uncomment to add accelleration to the animation. The speed is automatically adjusted to the framerate.\n\tvalue = Math.max(value, scriptProperties.minValue);\n\tbeatOn = false;\n\treturn value;\n}\n\n/**\n * Updates the list of beats remembered by adding the newest and deleting the oldest.\n * @param {number} maxDelta (the number of the frequency band that needs to be updated)\n * @param {number} lastBeat (the time, in milliseconds, that passed from the last beat)\n */\nfunction updateBeatsHistory(maxDelta, lastBeat) {\n\tbeatsHistory[maxDelta].unshift(audioDelta[maxDelta]);\n\tdiffHistory[maxDelta].unshift(audioDelta[maxDelta] - oldDelta[maxDelta]);\n\tbeatNoBeatDiffHistory[maxDelta].unshift(beatsAverage[maxDelta] - arrayAverage(noBeatAudioLevel[maxDelta]));\n\tif (n > parseInt(scriptProperties.nBeats)) popHistory(maxDelta);\n\telse n++;\n\tbeatsAverage[maxDelta] = Math.min(analiseHistory(beatsHistory[maxDelta], lastBeat), arrayAverage(noBeatAudioLevel[maxDelta]) * 1.8);\n\tdiffAverage[maxDelta] = Math.min(analiseHistory(diffHistory[maxDelta], lastBeat), 0.7);\n}\n\n/**\n * Updates the history of non-beat audio levels. Provide the frequency band to exclude it from the update.\n * @param {number=} maxDelta (the number of the frequency band that can't be updated because a beat is happening)\n */\nfunction updateNoBeatHistory(maxDelta) {\n\tfor (var i = 0; i < 16; ++i){\n\t\tif (i != maxDelta){\n\t\t\tnoBeatAudioLevel[i].unshift(audioDelta[i]);\n\t\t\tif (noBeatAudioLevel[i].length > nonBeatSound * fps) noBeatAudioLevel[i].pop();\n\t\t}\n\t}\n}\n\n/**\n * Deletes the oldest remembered beat.\n * @param {number} maxDelta (the number of the frequency band that needs to be reduced)\n */\nfunction popHistory(maxDelta) {\n\tbeatsHistory[maxDelta].pop();\n\tdiffHistory[maxDelta].pop();\n\tbeatNoBeatDiffHistory[maxDelta].pop();\n}\n\n/**\n * Analyze the list of remembered beats to decides which are the best conditions for the next beat.\n * @param {Array<number>} history (the array to be analised)\n * @param {number} lastBeat (the time, in milliseconds, that passed from the last beat)\n * @return {number} the estimated minimum value of the next beat\n */\nfunction analiseHistory(history, lastBeat) {\n\tlet tempMax = 0;\n\tlet tempMin = 100;\n\tfor (var i = 0; i < history.length; ++i){\n\t\tif (history[i] > tempMax) tempMax = history[i];\n\t\telse if (history[i] < tempMin) tempMin = history[i];\n\t}\n\ttempMin += (tempMax - tempMin) / 3;\n\tlet tempAverage = (tempMax + tempMin) / 2;\n\tlet n = 0;\n\tlet average = 0;\n\tfor (var i = 0; i < history.length; ++i){\n\t\tif (history[i] > tempAverage) n++;\n\t\taverage += history[i];\n\t}\n\tlet full, m = 0, t = 0, s = 0, modifier1;\n\tif (currentFrame - lastBeat > timePop && m == 0) m = currentFrame;\n\telse m = 0;\n\tif (m != 0) Math.min(t = m / timePop, scriptProperties.nBeats / 5);\n\telse t = 0;\n\tif (m == 0 && t != 0 && s == 0) s = currentFrame;\n\telse s = 0;\n\tif (s != 0) modifier1 = (t - (currentFrame - s)) / timePop;\n\telse modifier1 = lastBeat / timePop;\n\tlet timePassed = Math.min(modifier1, scriptProperties.nBeats / 5);\n\tif (history.length > scriptProperties.nBeats / 5){\n\t\taverage /= history.length + timePassed;\n\t\tfull = true;\n\t} else {\n\t\taverage /= scriptProperties.nBeats / 5;\n\t\tfull = false;\n\t}\n\tif (tempMax - tempMin > 0.2){\n\t\taverage = 0;\n\t\tif (n >= history.length * (2 / 3)){\n\t\t\tn = 0;\n\t\t\tfor (var i = 0; i < history.length; ++i){\n\t\t\t\tif (history[i] > tempAverage){\n\t\t\t\t\taverage += history[i];\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (n <= history.length / 3){\n\t\t\tn = 0;\n\t\t\tfor (var i = 0; i < history.length; ++i){\n\t\t\t\tif (history[i] < tempAverage){\n\t\t\t\t\taverage += history[i];\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (full) average /= n + timePassed;\n\t\telse average /= n + timePassed / 2;\n\t}\n\treturn average;\n}\n",
				"scriptproperties" : 
				{
					"adaptiveValue" : false,
					"beatSpeed" : 0.89999998,
					"endBeatSpeed" : 0.1,
					"lowerLimit" : 0.30000001,
					"maxValue" : 1,
					"minValue" : 0.5,
					"nBeats" : "15",
					"sensivity" : 0.050000001,
					"tollerance" : 0.80000001,
					"tollerance1" : 0.5
				},
				"value" : 1.0
			},
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n// Set a default color here: \"0, 0, 0\" (RGB) means black by default\nlet color = new Vec3(0, 0, 0);\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n\treturn color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tcolor = event.primaryColor;\n}\n",
				"value" : "0.00000 0.00000 0.00000"
			},
			"colorBlendMode" : 7,
			"id" : 119,
			"image" : "models/workshop/3187908708/solid_instance_model_c0eced19.json",
			"instance" : 
			{
				"combos" : 
				{
					"version" : 2
				},
				"id" : 0,
				"textures" : [ "util/white" ]
			},
			"name" : "Album Cover Frame",
			"origin" : "-622.52673 537.99457 0.00000",
			"parent" : 114,
			"scale" : 
			{
				"script" : "// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'maxScale',\n\t\tlabel: 'Max Scale',\n\t\tvalue: 1,\n\t\tmin: 0.1,\n\t\tmax: 5,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'minScale',\n\t\tlabel: 'Min Scale',\n\t\tvalue: 0.2,\n\t\tmin: 0.1,\n\t\tmax: 5,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'smoothRate',\n\t\tlabel: 'Smooth Rate',\n\t\tvalue: 70,\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tinteger: true\n\t})\n\t.finish();\n\n\nconst resolution = 64 // 16,32,64\nconst audioBuffer = engine.registerAudioBuffers(resolution);\nlet smoothAudioBuffer = initialSmoothAudioBuffer(); // [0,0,0,0,..] audioAverageSmoothResult\n\nexport function update(value) {\n\tsmoothAudio()\n\treturn getAverage(smoothAudioBuffer)\n}\n\n// engine.frametime - Returns the time to update the last frame.\nfunction smoothAudio(){\n\tfor(let i=0; i < resolution; i++){\n\t\tlet volumeDifference = audioBuffer.average[i] - smoothAudioBuffer[i];\n\t\tsmoothAudioBuffer[i] += volumeDifference * getField('smoothRate') * engine.frametime\n\t\tsmoothAudioBuffer[i] = setAudioMinMax(smoothAudioBuffer[i]);\n\t}\n}\n\nfunction getField(nameField=''){\n\tif (nameField == 'smoothRate') {\n\t\treturn 15 - scriptProperties[nameField]/10\n\t}\n\treturn scriptProperties[nameField]\n}\n\nfunction setAudioMinMax(value){\n\treturn Math.max(\n\t\t\tMath.min(\n\t\t\t\tvalue, \n\t\t\t\tgetField('maxScale')),\n\t\t\tgetField('minScale'))\n}\n\nfunction initialSmoothAudioBuffer(){\n\tlet list = []\n\tfor(let i=0; i < resolution; i++){\n\t\tlist.push(0)\n\t}\n\treturn list\n}\n\nfunction getAverage(...values){\n\tif(values.length == 1){\n\t\tlet obj = values[0]\n\t\tvalues = Array.isArray(obj) ? obj : values\n\t}\n\tlet sum = values.reduce((total, value) => total + value)\n\treturn sum/values.length\n}\n\nfunction checkArrayFrequency(array=[], field) {\n\tlet sum = getAverage(array)\n\treturn sum > scriptProperties[field] ? 1 : 0;\n}\n\nfunction divArray(array=[], amountParts = 1){\n\tif(!amountParts || amountParts < 2) return array\n\tlet isOdd = (array.length % 2) != 0\n\tlet size = (array.length - (isOdd ? 1 : 0))/amountParts\n\tlet divList = []\n\n\tfor(let i = 0; i < amountParts; i++){\n\t\tif(isOdd && i == amountParts-1){\n\t\t\tdivList.push(array.slice(size*i,size*(i+1)+1))\n\t\t}else{\n\t\t\tdivList.push(array.slice(size*i,size*(i+1)))\n\t\t}\n\t}\n\treturn divList\n}\n",
				"scriptproperties" : 
				{
					"maxScale" : 2.8,
					"minScale" : 2.0999999,
					"smoothRate" : 69
				},
				"value" : "2.16669 2.15984 2.70903"
			},
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tthisLayer.visible = event.state !== MediaPlaybackEvent.PLAYBACK_STOPPED;\n}\n",
				"value" : true
			}
		},
		{
			"alpha" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						}
					],
					"options" : 
					{
						"fps" : 60,
						"length" : 60,
						"mode" : "single",
						"startpaused" : true,
						"wraploop" : null
					}
				},
				"script" : "/*\n*  Transformierend: Media Area, Skalierung\n*/\n'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\n\t//if new thumbnail has been received play animation\n\tif (thisLayer.visible == true) {\n\t\tthisLayer.alpha = 0;\n\t\tthisObject.getAnimation().play();\n\t}\n\telse {\n\t\treturn\n\t}\n}\n",
				"value" : 1.0
			},
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 123,
			"image" : "models/workshop/3187908708/solid_instance_model_7d738a82.json",
			"instance" : 
			{
				"combos" : 
				{
					"version" : 2
				},
				"id" : 124,
				"textures" : [ "util/white" ],
				"usertextures" : 
				[
					{
						"name" : "$mediaThumbnail",
						"type" : "system"
					}
				]
			},
			"name" : "Album Cover",
			"origin" : "-619.47491 538.88855 0.00000",
			"parent" : 114,
			"scale" : "1.40504 1.40028 1.88432",
			"size" : "350.00000 350.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3187908708';\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tthisLayer.visible = event.state !== MediaPlaybackEvent.PLAYBACK_STOPPED;\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/8bitOperatorPlus8-Regular.ttf",
			"horizontalalign" : "right",
			"id" : 137,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallDate",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "505.02551 794.47162 0.00000"
			},
			"padding" : 32,
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "185.00000 72.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport let __workshopId = '2108644365';\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEV',\n      'MAR',\n      'ABR',\n      'MAI',\n      'JUN',\n      'JUL',\n      'AGO',\n      'SET',\n      'OUT',\n      'NOV',\n      'DEZ'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Dom',\n      'Seg',\n      'Ter',\n      'Qua',\n      'Qui',\n      'Sex',\n      '\\nSáb'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Domingo',\n      'Segunda-feira',\n      'Terça-feira',\n      'Quarta-feira',\n      'Quinta-feira',\n      'Sexta-feira',\n      'Sábado'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      return currentDate + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return currentDate + delimiterValue + months[date.getMonth()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "/",
					"alignVertical" : true,
					"dayFormat" : "1",
					"monthFormat" : "2",
					"showDay" : 
					{
						"user" : "switchdatenotation",
						"value" : false
					},
					"useDelimiter" : true
				},
				"value" : "JUL06"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1180, 0)\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/8bitOperatorPlus8-Regular.ttf",
			"horizontalalign" : "right",
			"id" : 135,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "smallClock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\nvar OriginX\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n \tHalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "863.36084 793.50897 0.00000"
			},
			"padding" : 32,
			"parent" : 114,
			"pointsize" : 15.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "350.00000 72.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : 
					{
						"user" : "showseconds",
						"value" : false
					},
					"use24hFormat" : 
					{
						"user" : "use24hformat",
						"value" : true
					}
				},
				"value" : "01:23:45 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(2055, 1200, 0)\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"alignment" : "left",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 79,
			"image" : "models/util/solidlayer.json",
			"name" : "Duration Bar",
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "27.65656 125.33730 0.00000"
			},
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2877039332';\nimport * as WEMath from 'WEMath';\n\n//--Global Data--\n// Your duration bar's x scale\nvar userScale = 1;\nvar MaxScale = 1.45;\nvar CurrentScale = 0;\n\n// How long media is into the track in seconds\nvar position = 0;\n\n// How long media is in seconds\nvar duration = 0;\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar currentState = 0;\n\nvar AccumulateFrameTime = 0\nvar AccumulateDuration = 1\n\n//--------------------------------------------------------------------------------------------\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n        // Assign the changed property to a local variable\n        userScale = changedUserProperties.scale;\n\t\tthisLayer.scale.x = (position/duration) * MaxScale * userScale \n\t\tthisLayer.scale.y = 0.05 * userScale\n    }\n}\n\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t// The bar will move while a song is playing, if paused it will adjust to where the user \t\tmoves the position of the song to \n\tif (currentState == MediaPlaybackEvent.PLAYBACK_PLAYING) {\n\t\t// Thank you https://steamcommunity.com/id/XerRag\n\t\t// position += engine.frametime;\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\t// position += engine.frametime;\n\t\t// console.log(engine.frametime)\n\t\tAccumulateFrameTime += engine.frametime\n\t\tif (AccumulateFrameTime >= AccumulateDuration){\n\t\t\tposition += AccumulateFrameTime\n\t\t\tAccumulateFrameTime = 0\n\t\t}\n\t\tif (position >= duration){\n\t\t\tposition = duration\n\t\t}\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else if (currentState == MediaPlaybackEvent.PLAYBACK_PAUSED) {\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else {\n\t\tAccumulateFrameTime = 0\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaTimelineEvent} event\n */\nexport function mediaTimelineChanged(event) {\n\tposition = event.position;\n\tduration = event.duration;\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tcurrentState = event.state;\n}\n",
				"value" : "0.82536 0.02220 0.50738"
			},
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"alignment" : "left",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 102,
			"image" : "models/util/solidlayer.json",
			"name" : "Total Duration Bar",
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "27.94948 122.04889 0.00000"
			},
			"scale" : "1.42770 0.00399 1.00000",
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "left",
			"id" : 254,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 571.83215,
			"name" : "DummyArtistTitle",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1480) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1090) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1480) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1100) * userScale.y);\n// \treturn value\n// }\n\n",
				"value" : "120.27164 323.85199 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 5.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "156.00000 31.00000",
			"text" : "ARTIST NAME",
			"verticalalign" : "center",
			"visible" : false
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "left",
			"id" : 336,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 571.83215,
			"name" : "DummyArtistTitleScroll",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1480) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1080) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1480) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1100) * userScale.y);\n// \treturn value\n// }\n\n",
				"value" : "-3.32097 -0.78638 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 254,
			"pointsize" : 5.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "156.00000 31.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\nvar currentTitle = \"\"\n\n\nexport function mediaPropertiesChanged(event) {\n\n\tcurrentTitle = event.title\n\tthisLayer.text = currentTitle\n}\n\nexport function update(value){\n\treturn thisScene.getLayer(\"Artist Title\").text\n}",
				"value" : "ARTIST NAME"
			},
			"verticalalign" : "center",
			"visible" : false
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.27451 0.73333 0.96471",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "fonts/Unibody 8 Italic.ttf",
			"horizontalalign" : "left",
			"id" : 780,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : true,
			"maxrows" : 1,
			"maxwidth" : 571.83215,
			"name" : "Artist Title bkp",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1480) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1100) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}",
				"value" : "-0.09232 1.05585 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 254,
			"pointsize" : 5.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "156.00000 31.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2978738836';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n/**\n * @param {MediaPropertiesEvent} event\n */\n\n\n\nvar currentTitle = \"\"\nvar animatedCounter = 0\nvar scrollCooldownCounter = 0\nvar scrollCooldownduration = 20\nvar enableScrollCoolDown = false\nvar enableAnimatedScroll = false\nvar displayTitle = \"\"\nvar displayLength = 572\nvar enablePauseEnd = false\nvar pauseEndCounter = 0\nvar pauseEndDuration = 100\nvar pauseDuration = 600\nvar pauseCounter = 0\nvar enablePause = false\nvar easterEggProb = 0.3\n\n\nvar EasterEggMode\nvar OriginalArtistTitle = \"\"\nvar SongTitle = \"\"\nvar EasterEggTitle = \"\"\nlet EasterEggsTable = {\n\t\"pewdiepie\": \"Gloria Borger\",\n\t\"markiplier\": \"Markimoo\",\n\t\"penguinz0\": \"Jesus\",\n\t\"eminem\": \"Rap God\",\n\t\"mrbeast\": \"Burger Shop CEO\",\n\t\"jacksepticeye\": \"Irish Fellow\",\n\t\"pinkfong\": \"Make it stop!\",\n\t\"taylor swift\": \"Tay Tay\",\n\t\"snoop dogg\": \"The Guy Who Smoke Weed Everyday\",\n\t\"basically homeless\": \"Virus Guy\",\n\t\"\": [\"No idea who this is...\", \"???\", \"??!\", \"?!?\", \"!!!\", \"...\"]\n\n}\n\nlet EasterEggsSongTitleTable = {\n\t\"XVIDEO\": [\"Really?\", \"Oh that's hot\", \"BigDong9000\", \"...\", \"Wow, this is just... wow\"],\n\t\"PORNHUB\": [\"Ron Jeremy\"],\n\t\"e621\": [\"OwO\", \"UwU\", \"OwO *notice your bulge*\", \"NSFW!\", \"YCH\"] \n}\n\nvar enablePauseAtStart = false\n\nfunction updateEasterEggsName(){\n\tvar isKeyWorldinTitle = false\n\tvar keywordTitle = \"\"\n\tfor (var key in EasterEggsSongTitleTable){\n\t\t// console.log(key)\n\t\t// console.log(SongTitle)\n\t\t// console.log(SongTitle.includes(key))\n\t\tif (SongTitle.includes(key)){\n\t\t\tisKeyWorldinTitle = true\n\t\t\tkeywordTitle = key\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (EasterEggMode && (OriginalArtistTitle.toLowerCase() in EasterEggsTable || isKeyWorldinTitle) && Math.random() <= easterEggProb){\n\t\t// console.log('easter')\n\t\tif (isKeyWorldinTitle && keywordTitle != \"\"){\n\t\t\tvar easterEggsSongTitleTableContent = EasterEggsSongTitleTable[keywordTitle]\n\t\t\t// console.log(easterEggsSongTitleTableContent)\n\t\t\tif (typeof easterEggsSongTitleTableContent == 'string'){\n\t\t\t\tEasterEggTitle = easterEggsSongTitleTableContent\n\n\t\t\t} else {\n\t\t\t\tEasterEggTitle = easterEggsSongTitleTableContent[Math.floor(Math.random() * easterEggsSongTitleTableContent.length)]\n\t\t\t}\n\t\t} else {\n\n\t\t\tvar easterEggsTableContent = EasterEggsTable[OriginalArtistTitle.toLowerCase()]\n\t\t\tif (typeof easterEggsTableContent == 'string'){\n\t\t\t\tEasterEggTitle = easterEggsTableContent\n\t\t\t} else {\n\t\t\t\tEasterEggTitle = easterEggsTableContent[Math.floor(Math.random() * easterEggsTableContent.length)]\n\t\t\t}\n\t\t}\n\t\tcurrentTitle = EasterEggTitle\n\t} else {\n\t\tcurrentTitle = OriginalArtistTitle\n\t}\n\tif (currentTitle == \"\"){\n\t\tcurrentTitle = \"???\"\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tif (event.state == 1){\n\t\tupdateEasterEggsName()\n\t}\t\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('eastereggsmode')) {\n\t\t\tEasterEggMode = changedUserProperties.eastereggsmode\n\t\t\tupdateEasterEggsName()\n\t\t\tvar DummyArtistTitle = thisScene.getLayer(\"DummyArtistTitle\")\n\t\t\tDummyArtistTitle.text = currentTitle\n\t\t}\n}\n\nexport function mediaPropertiesChanged(event) {\n\n\tSongTitle = event.title\n\n\tvar tempCurrentTitle = \"\"\n\tif (event.artist !== \"\"){\n\t\ttempCurrentTitle = event.artist;\n\t} else {\n\t\ttempCurrentTitle = event.albumArtist\n\t}\n\n\tif (event.albumTitle !== \"\"){\n\t\t// console.log(tempCurrentTitle.indexOf(event.albumTitle))\n\t\tif(tempCurrentTitle.includes(event.albumTitle) !== true) {\n\t\t\ttempCurrentTitle += \"  —  \"\n\t\t\ttempCurrentTitle += event.albumTitle\n\t\t}\n\n\t}\n\tcurrentTitle = tempCurrentTitle\n\tOriginalArtistTitle = currentTitle\n\tupdateEasterEggsName()\n\tthisLayer.text = currentTitle\n\tdisplayTitle = currentTitle\n\tenablePauseAtStart = true\n\tvar DummyArtistTitle = thisScene.getLayer(\"DummyArtistTitle\")\n\tDummyArtistTitle.text = currentTitle\n}\n\nexport function update(value) {\n\tvar dummyArtistTitleSizeX = thisScene.getLayer(\"DummyArtistTitle\").size.x\n\tenableAnimatedScroll = false\n\tif (dummyArtistTitleSizeX > thisLayer.maxwidth){\n\t\tenableAnimatedScroll = true\n\t\tif (enablePauseAtStart == true){\n\t\t\tenablePauseAtStart = false\n\t\t\tenablePause = true\n\t\t}\n\t}\n\t// console.log(thisLayer.maxwidth)\n\t// console.log(dummyArtistTitleSizeX)\n\tif (enableAnimatedScroll){\n\t\tif (enablePause){\n\t\t\tif (pauseCounter >= pauseDuration){\n\t\t\t\tpauseCounter = 0\n\t\t\t\tenablePause = false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpauseCounter += 1\n\t\t\t}\n\t\t\treturn currentTitle\n\t\t} else if (enableScrollCoolDown){\n\t\t\tif (scrollCooldownCounter >= scrollCooldownduration){\n\t\t\t\tscrollCooldownCounter = 0\n\t\t\t\tenableScrollCoolDown = false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollCooldownCounter += 1\n\t\t\t}\n\t\t\treturn displayTitle\n\t\t} else if (enablePauseEnd) {\n\t\t\tif (pauseEndCounter >= pauseEndDuration){\n\t\t\t\tpauseEndCounter = 0\n\t\t\t\tenablePauseEnd = false\n\t\t\t\tenablePause = true\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpauseEndCounter += 1\n\t\t\t}\n\t\t\treturn displayTitle\n\t\t} else {\n\t\t\tdisplayTitle = currentTitle.substring(animatedCounter)\n\t\t\tvar dummyArtistTitleSizeXScroll = thisScene.getLayer(\"DummyArtistTitleScroll\").size.x\n\t\t\t// console.log(dummyArtistTitleSizeXScroll)\n\t\t\tif (dummyArtistTitleSizeXScroll <= displayLength){\n\t\t\t\tanimatedCounter = 0\n\t\t\t\tenablePauseEnd = true\n\t\t\t} else {\n\t\t\t\tanimatedCounter ++\n\t\t\t\tenableScrollCoolDown = true\n\t\t\t}\n\n\t\t\t// if (animatedCounter ++ >= (currentTitle.length - displayLength)){\n\t\t\t// \tanimatedCounter = 0\n\t\t\t// \tenablePauseEnd = true\n\t\t\t// } else {\n\t\t\t// \tanimatedCounter += 1\n\t\t\t// \tenableScrollCoolDown = true\n\t\t\t// }\n\t\t\treturn displayTitle\n\t\t}\n\t} else {\n\t\treturn currentTitle\n\t}\n\n}\n",
				"value" : "ARTIST NAME"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1480, 1100, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\n\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}",
				"value" : false
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"font" : "systemfont_verdana",
			"horizontalalign" : "left",
			"id" : 440,
			"limitrows" : true,
			"limituseellipsis" : true,
			"limitwidth" : true,
			"maxrows" : 1,
			"maxwidth" : 571.83215,
			"name" : "Artist Title",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "3.82927 -1.54059 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 254,
			"pointsize" : 5.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "139.00000 25.00000",
			"text" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1480, 1100, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t\tUserProperties = changedUserProperties\n\t\t// console.log(UserProperties)\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t\t\t// console.log(\"scale:\", userPropertiesLayer.scale.x)\n\t\t\t// console.log(\"DefaultLayerPos.x\", DefaultLayerPos.x)\n\t\t\t// console.log(\"ScaledLayerPos\", ScaledLayerPos.y)\n\t\t\t// console.log(\"HalfX\", HalfX)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\t\tAlphaStep = UserProperties.animationalphastepsize\n\t\t\t// console.log(\"AlphaStep:\", AlphaStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t\t\t// console.log(\"AnimationDelayDuration:\", AnimationDelayDuration)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t\t\t// console.log(\"AlphaPosStep:\", AlphaPosStep)\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t\t\t// console.log(\"MaxAlpha:\", MaxAlpha)\n\t\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y - AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\t// thisLayer.origin = new Vec3(thisLayer.origin.x, thisLayer.origin.y + AlphaPosStep, thisLayer.origin.z)\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t\tthisLayer.origin = ScaledLayerPos\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t\t// thisLayer.origin = new Vec3(ScaledLayerPos.x,  ScaledLayerPos.y + LastdelayTotalCount*AlphaPosStep, ScaledLayerPos.z)\n\t\t\t}\n\n\t\t}\n\t}\n\t// console.log(LastdelayTotalCount*AlphaPosStep)\n}\n",
				"value" : "ARTIST NAME"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1480, 1100, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"alignment" : "top",
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2489075276/distortion_glitch/effect.json",
					"id" : 383,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Bounce X" : 0.41999999,
								"Bounce Y" : -1.87,
								"CA interlace X" : 1.25,
								"CA interlace Y" : -1.04,
								"Fault 1 multiplier" : 21.35,
								"Fault 1 scale" : 70.309998,
								"Fault 2 multiplier" : 0,
								"Fault 2 scale" : 85.940002,
								"Noise opacity" : 0.14,
								"Noise speed" : -6.98,
								"Opacity" : 0.69,
								"Speed" : 1,
								"Warp" : 0.029999999
							},
							"id" : 384
						}
					],
					"visible" : true
				}
			],
			"id" : 382,
			"image" : "models/util/composelayer.json",
			"name" : "GlichyEffectLayerDay",
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('scale')) {\n\t\t\tvar userScale = thisScene.getLayer(\"userProperties\").scale;\n\t\t\tthisLayer.origin = new Vec3(HalfX - ((HalfX - 1682.23254) * userScale.x), \n\t\t\tHalfY - ((HalfY - 1205.64026) * userScale.x), \n\t\t\tthisLayer.origin.z)\n        }\n}\n\n// export function update(value){\n// \tvar userScale = thisScene.getLayer(\"userProperties\").scale\n// \tvalue.x = HalfX - ((HalfX - 1682.23254) * userScale.x);\n// \tvalue.y = HalfY - ((HalfY - 1205.64026) * userScale.y);\n// \treturn value\n// }",
				"value" : "214.32687 244.51016 0.00000"
			},
			"scale" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\n\n\n\n// export function applyUserProperties(userProperties) {\n//         if (userProperties.hasOwnProperty('scale')) {\n//             var userScale = userProperties.scale;\n// \t\t\tthisLayer.scale.x = (userScale.x + 0.10976);\n// \t\t\tthisLayer.scale.y = (userScale.y - 0.98483);\n// \t\t\tthisLayer.scale.x = 20\n//         }\n//}\n\nexport function update(value) {\n\n\tvar userScale = thisScene.getLayer(\"mainClock\").scale\n\tvalue.x = 1.46561 * userScale.x;\n\tvalue.y = 0.29543 * userScale.y;\n\treturn value;\n}\n",
				"value" : "0.79050 0.32043 1.00000"
			},
			"size" : "512.00000 512.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\nvar counter = 0;\nvar startCounter = false;\nvar cooldownStart = false;\nvar cooldown = 0;\n\nvar cooldownDuration = 1000\nvar maxActiveDuration = 50\nvar activeProb = 0.1\nvar activeDuration = 0\nvar EnableCRTGlichEffect = false\n\n\nexport function applyUserProperties(changedUserProperties) {\n        if (changedUserProperties.hasOwnProperty('displaypanelglicheffect')) {\n\t\t\tEnableCRTGlichEffect = changedUserProperties.displaypanelglicheffect\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('displaypanelglicheffectprob')) {\n\t\t\tactiveProb = changedUserProperties.displaypanelglicheffectprob\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('displaypanelglicheffectmaxduration')) {\n\t\t\tmaxActiveDuration = changedUserProperties.displaypanelglicheffectmaxduration\n\t\t}\n\t\tif (changedUserProperties.hasOwnProperty('displaypanelglicheffectcooldownduration')) {\n\t\t\tcooldownDuration = changedUserProperties.displaypanelglicheffectcooldownduration\n\t\t}\n\t\t\n}\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\nexport function update(value) {\n\tif (EnableCRTGlichEffect){\n\t\tif (cooldownStart == true) {\n\t\t\tif (cooldown >= cooldownDuration) {\n\t\t\t\tcooldownStart = false\n\t\t\t\tcooldown = 0\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tcooldown += 1\n\t\t\t}\n\n\t\t} else if (startCounter == true & counter >= activeDuration) {\n\t\t\tstartCounter = false\n\t\t\tcounter = 0\n\t\t\tcooldownStart = true\n\t\t\treturn false\n\t\t} else if (startCounter == true & counter < activeDuration){\n\t\t\tcounter += 1\n\t\t} else { \n\t\t\tif (Math.random() < activeProb){\n\t\t\t\tstartCounter = true\n\t\t\t\tactiveDuration = Math.random() * maxActiveDuration\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n}",
				"value" : false
			}
		},
		{
			"alignment" : "left",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"colorBlendMode" : 31,
			"id" : 108,
			"image" : "models/util/solidlayer.json",
			"locktransforms" : true,
			"name" : "Duration Bar bkp",
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n",
				"value" : "176.43373 95.06683 0.00000"
			},
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2877039332';\nimport * as WEMath from 'WEMath';\n\n//--Global Data--\n// Your duration bar's x scale\nvar userScale = 1;\nvar MaxScale = 1.45;\nvar CurrentScale = 0;\n\n// How long media is into the track in seconds\nvar position = 0;\n\n// How long media is in seconds\nvar duration = 0;\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar currentState = 0;\n\nvar AccumulateFrameTime = 0\nvar AccumulateDuration = 1\n\n//--------------------------------------------------------------------------------------------\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n        // Assign the changed property to a local variable\n        userScale = changedUserProperties.scale;\n\t\tthisLayer.scale.x = (position/duration) * MaxScale * userScale \n\t\tthisLayer.scale.y = 0.05 * userScale\n    }\n}\n\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t// The bar will move while a song is playing, if paused it will adjust to where the user \t\tmoves the position of the song to \n\tif (currentState == MediaPlaybackEvent.PLAYBACK_PLAYING) {\n\t\t// Thank you https://steamcommunity.com/id/XerRag\n\t\t// position += engine.frametime;\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\t// position += engine.frametime;\n\t\t// console.log(engine.frametime)\n\t\tAccumulateFrameTime += engine.frametime\n\t\tif (AccumulateFrameTime >= AccumulateDuration){\n\t\t\tposition += AccumulateFrameTime\n\t\t\tAccumulateFrameTime = 0\n\t\t}\n\t\tif (position >= duration){\n\t\t\tposition = duration\n\t\t}\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else if (currentState == MediaPlaybackEvent.PLAYBACK_PAUSED) {\n\t\t// value = new Vec3(WEMath.smoothStep(0, duration, position) * scaleX, scaleY, scaleZ)\n\t\tvalue.x = (position/duration) * MaxScale * userScale \n\t} else {\n\t\tAccumulateFrameTime = 0\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaTimelineEvent} event\n */\nexport function mediaTimelineChanged(event) {\n\tposition = event.position;\n\tduration = event.duration;\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tcurrentState = event.state;\n}\n",
				"value" : "0.82440 0.02571 0.50000"
			},
			"size" : "256.00000 256.00000",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\n\t\t}\n\t}\n}\n",
				"value" : false
			}
		},
		{
			"animationlayers" : 
			[
				{
					"additive" : false,
					"animation" : 199,
					"blend" : 1.0,
					"id" : 275,
					"name" : "Animação 1",
					"rate" : 1.0,
					"visible" : true
				}
			],
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/waterwaves/effect.json",
					"id" : 186,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"direction" : 3.0030689,
								"exponent" : 2.4000001,
								"scale" : 57.299999,
								"speed" : 8.0799999,
								"strength" : 0.050000001
							},
							"id" : 187,
							"textures" : [ null, "masks/waterwaves_mask_e97ac15e" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/shake/effect.json",
					"id" : 224,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"DIRECTION" : 1
							},
							"constantshadervalues" : 
							{
								"bounds" : "0.994 0.997",
								"friction" : "1 1",
								"speed" : 1.5,
								"strength" : 0.138
							},
							"id" : 225,
							"textures" : [ null, "masks/shake_mask_d99ba0b2", null, "masks/shake_mask_c4bf7bc7" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2973943998/iris_follow_cursor/effect.json",
					"id" : 335,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"FOLLOWCURSOR" : 0
							},
							"constantshadervalues" : 
							{
								"noiseamount" : 1.6900001,
								"phase" : 0.0,
								"rough" : 1,
								"scale" : "1.07 1.07",
								"scale_multiplier" : "1.02 1.02",
								"speed" : 0.76999998
							},
							"id" : 337,
							"textures" : [ null, "masks/iris_follow_cursor_mask_27bd6a09" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2812601803/tone_mapping/effect.json",
					"id" : 191,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"GAMMA" : 1
							},
							"constantshadervalues" : 
							{
								"Corrected display gamma" : 1.58,
								"Exposure adjustment" : 1,
								"Initial display gamma" : 2.22,
								"Opacity" : 1
							},
							"id" : 194
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/shake/effect.json",
					"id" : 190,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"bounds" : "0 1",
								"friction" : "1 1",
								"speed" : 0.68000001,
								"strength" : 0.068999998
							},
							"id" : 195,
							"textures" : [ null, "masks/shake_mask_33c81089" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 145,
			"image" : "models/F4mi 1.json",
			"name" : "F4mi 1",
			"origin" : "856.40436 824.79956 0.00000",
			"size" : "2500.00000 2000.00000"
		},
		{
			"alpha" : 0.12,
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\nexport let __workshopId = '3010592987';\n\n// Define a Vec3 class with scale method\nclass Vec3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    subtract(vec) {\n        return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    add(vec) {\n        return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n    }\n}\n\n// Set a default color here: \"1, 1, 1\" (RGB) means white by default\nlet color = new Vec3(1, 1, 1);\nlet targetColor = new Vec3(1, 1, 1);\nlet transitionSpeed = 0.05;\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update() {\n    // Calculate the difference between the target color and the current color\n    let diff = targetColor.subtract(color);\n\n    // If the difference is significant, transition smoothly\n    if (diff.length() > 0.01) {\n        color.x += diff.x * transitionSpeed;\n        color.y += diff.y * transitionSpeed;\n        color.z += diff.z * transitionSpeed;\n    }\n\n    return color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n    targetColor = event.primaryColor;\n}\n",
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 60,
			"image" : "models/106891.json",
			"name" : "106891",
			"origin" : "960.00000 540.00000 0.00000",
			"size" : "2134.00000 1200.00000"
		},
		{
			"id" : 217,
			"instanceoverride" : null,
			"name" : "Bokeh Cir",
			"origin" : "1317.39185 440.02539 0.00000",
			"particle" : "particles/workshop/2820123291/Bokeh_Cir.json",
			"scale" : "0.59245 0.59245 1.00000"
		},
		{
			"alpha" : 0.79000002,
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/waterripple/effect.json",
					"id" : 94,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"animationspeed" : 0.13,
								"ratio" : 1.2,
								"ripplestrength" : 0.079999998,
								"scale" : 1.88,
								"scrolldirection" : -2.8725479,
								"scrollspeed" : 0.029999999
							},
							"id" : 95,
							"textures" : [ null, "masks/waterripple_mask_99d1a520", "effects/waterripplenormal" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/vhs/effect.json",
					"id" : 116,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"artifacts" : 1.5,
								"chromatic" : 0.1,
								"distortionspeed" : 1.0,
								"distortionstrength" : 1.0,
								"distortionwidth" : 1.0,
								"scale" : 0.30000001,
								"strength" : 1.0
							},
							"id" : 117
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2798319181/bokeh_blur/effect.json",
					"id" : 641,
					"name" : "Sombra",
					"passes" : 
					[
						{
							"id" : 642
						},
						{
							"id" : 643
						},
						{
							"combos" : 
							{
								"PRECISE" : 1,
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 1.97
							},
							"id" : 644
						},
						{
							"combos" : 
							{
								"PRECISE" : 1,
								"QUALITY" : 3,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"Aperture" : 1.97,
								"Opacity" : 1
							},
							"id" : 645
						},
						{
							"combos" : 
							{
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 1.97,
								"Gamma" : 1.01,
								"Highlights" : 0.54000002
							},
							"id" : 646
						},
						{
							"combos" : 
							{
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 1.97
							},
							"id" : 647
						},
						{
							"combos" : 
							{
								"QUALITY" : 3,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"Aperture" : 1.97,
								"Opacity" : 1
							},
							"id" : 648
						}
					],
					"visible" : true
				}
			],
			"font" : "systemfont_verdana",
			"horizontalalign" : "center",
			"id" : 356,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainClock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "964.84180 293.95355 0.00000"
			},
			"padding" : 32,
			"pointsize" : 20.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "464.00000 165.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : true,
					"use24hFormat" : true
				},
				"value" : "12:34 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1193.57, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"alpha" : 0.94,
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"colorBlendMode" : 31,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/waterripple/effect.json",
					"id" : 148,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"animationspeed" : 0.13,
								"ratio" : 1.2,
								"ripplestrength" : 0.079999998,
								"scale" : 1.88,
								"scrolldirection" : -2.8725479,
								"scrollspeed" : 0.029999999
							},
							"id" : 151,
							"textures" : [ null, "masks/waterripple_mask_99d1a520", "effects/waterripplenormal" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/vhs/effect.json",
					"id" : 192,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"artifacts" : 1.5,
								"chromatic" : 0.1,
								"distortionspeed" : 1,
								"distortionstrength" : 1,
								"distortionwidth" : 1,
								"scale" : 0.30000001,
								"strength" : 1
							},
							"id" : 193
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2798319181/bokeh_blur/effect.json",
					"id" : 767,
					"name" : "Sombra",
					"passes" : 
					[
						{
							"id" : 768
						},
						{
							"id" : 769
						},
						{
							"combos" : 
							{
								"PRECISE" : 1,
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 2.5799999
							},
							"id" : 770
						},
						{
							"combos" : 
							{
								"PRECISE" : 1,
								"QUALITY" : 3,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"Aperture" : 2.5799999,
								"Opacity" : 0.029999999
							},
							"id" : 771
						},
						{
							"combos" : 
							{
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 2.5799999,
								"Gamma" : 1.9299999,
								"Highlights" : 1
							},
							"id" : 772
						},
						{
							"combos" : 
							{
								"QUALITY" : 3
							},
							"constantshadervalues" : 
							{
								"Aperture" : 2.5799999
							},
							"id" : 773
						},
						{
							"combos" : 
							{
								"QUALITY" : 3,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"Aperture" : 2.5799999,
								"Opacity" : 0.029999999
							},
							"id" : 774
						}
					],
					"visible" : true
				}
			],
			"font" : "systemfont_verdana",
			"horizontalalign" : "center",
			"id" : 322,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainDate",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "-3.08255 -131.65170 0.00000"
			},
			"padding" : 32,
			"parent" : 356,
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "174.00000 105.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport let __workshopId = '2108644365';\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n       'JAN',\n      'FEV',\n      'MAR',\n      'ABR',\n      'MAI',\n      'JUN',\n      'JUL',\n      'AGO',\n      'SET',\n      'OUT',\n      'NOV',\n      'DEZ'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Dom',\n      'Seg',\n      'Ter',\n      'Qua',\n      'Qui',\n      'Sex',\n      '\\nSab'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Domingo',\n      'Segunda',\n      'Terça',\n      'Quarta',\n      'Quinta',\n      'Sexta',\n      'Sábado'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      return currentDate + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return currentDate + delimiterValue + months[date.getMonth()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "/",
					"alignVertical" : true,
					"dayFormat" : "2",
					"monthFormat" : "3",
					"showDay" : true,
					"useDelimiter" : true
				},
				"value" : "JUL 05"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1120, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/waterripple/effect.json",
					"id" : 244,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"animationspeed" : 0.13,
								"ratio" : 1.2,
								"ripplestrength" : 0.079999998,
								"scale" : 1.88,
								"scrolldirection" : -2.8725479,
								"scrollspeed" : 0.029999999
							},
							"id" : 245,
							"textures" : [ null, "masks/waterripple_mask_99d1a520", "effects/waterripplenormal" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/vhs/effect.json",
					"id" : 246,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"artifacts" : 1.5,
								"chromatic" : 0.1,
								"distortionspeed" : 1.0,
								"distortionstrength" : 1.0,
								"distortionwidth" : 1.0,
								"scale" : 0.30000001,
								"strength" : 1.0
							},
							"id" : 248
						}
					],
					"visible" : true
				}
			],
			"font" : "systemfont_verdana",
			"horizontalalign" : "center",
			"id" : 243,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainClock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "957.96936 294.93530 0.00000"
			},
			"padding" : 32,
			"pointsize" : 20.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "464.00000 165.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tlet ampm = '';\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tampm = hours >= 12 ? ' PM' : ' AM';\n\t\thours %= 12;\n\t\tif (hours === 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\n\tif (!scriptProperties.use24hFormat) {\n\t\tvalue += ampm;\n\t}\n\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : true,
					"use24hFormat" : true
				},
				"value" : "12:34 AM"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1193.57, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/waterripple/effect.json",
					"id" : 259,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"animationspeed" : 0.13,
								"ratio" : 1.2,
								"ripplestrength" : 0.079999998,
								"scale" : 1.88,
								"scrolldirection" : -2.8725479,
								"scrollspeed" : 0.029999999
							},
							"id" : 260,
							"textures" : [ null, "masks/waterripple_mask_99d1a520", "effects/waterripplenormal" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/vhs/effect.json",
					"id" : 262,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"artifacts" : 1.5,
								"chromatic" : 0.1,
								"distortionspeed" : 1,
								"distortionstrength" : 1,
								"distortionwidth" : 1,
								"scale" : 0.30000001,
								"strength" : 1
							},
							"id" : 263
						}
					],
					"visible" : true
				}
			],
			"font" : "systemfont_verdana",
			"horizontalalign" : "center",
			"id" : 251,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "mainDate",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\nvar HalfX = 0\nvar HalfY = 0\n\nexport function init(value) {\n\tvar userProperties = thisScene.getLayer(\"userProperties\")\n    HalfX = userProperties.origin.x\n\tHalfY = userProperties.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\t// No changes to the object's position\n}\n\n",
				"value" : "0.72363 -131.65170 0.00000"
			},
			"padding" : 32,
			"parent" : 243,
			"pointsize" : 8.0,
			"scale" : 
			{
				"user" : "scale",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "174.00000 105.00000",
			"text" : 
			{
				"script" : "'use strict';\n\nexport let __workshopId = '2108644365';\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: false\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\nlet months;\nlet day;\nvar delimiterValue;\nvar newLine;\n\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n       'JAN',\n      'FEV',\n      'MAR',\n      'ABR',\n      'MAI',\n      'JUN',\n      'JUL',\n      'AGO',\n      'SET',\n      'OUT',\n      'NOV',\n      'DEZ'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'Dom',\n      'Seg',\n      'Ter',\n      'Qua',\n      'Qui',\n      'Sex',\n      '\\nSab'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Domingo',\n      'Segunda',\n      'Terça',\n      'Quarta',\n      'Quinta',\n      'Sexta',\n      'Sábado'\n    ]\n  }\n  let date = new Date(); \n  var currentDate = date.getDate()\n  if (currentDate < 10) {\n    currentDate = \"0\" + new String(currentDate)\n  }\n  {\n    if (scriptProperties.showDay == true) {\n      return currentDate + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear() + newLine + ' ' + day[date.getDay()];\n    }\n    if (scriptProperties.showDay == false) {\n      return currentDate + delimiterValue + months[date.getMonth()];\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "/",
					"alignVertical" : true,
					"dayFormat" : "2",
					"monthFormat" : "3",
					"showDay" : true,
					"useDelimiter" : true
				},
				"value" : "JUL 05"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\n\n// Media is Playing: 1\n// Media is Paused: 2\n// Media is Stopped: 0\nvar LastMusicState = 0\nvar CurrentMusicState = 0\n\nvar StartFadeOut = false\nvar StartFadeIn = false\n\nvar delayCounter = 0\nvar LastdelayTotalCount = 0\nvar EnableDelay = false\nvar AnimationDelayDuration\n\nvar MaxAlpha\nconst MinAlpha = 0\n\nvar HalfX\nvar HalfY\n\nvar UserProperties\nvar DefaultLayerPos = new Vec3(1682, 1120, 0)\nvar ScaledLayerPos\n\nvar AlphaPosStep\nvar AlphaStep\n\nexport function init(value) {\n\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\tHalfX = userPropertiesLayer.origin.x\n\tHalfY = userPropertiesLayer.origin.y\n\treturn value;\n}\n\nexport function applyUserProperties(changedUserProperties) {\n\tUserProperties = changedUserProperties\n\tif (changedUserProperties.hasOwnProperty('scale')) {\n\t\tvar userPropertiesLayer = thisScene.getLayer(\"userProperties\")\n\t\tScaledLayerPos = new Vec3(HalfX - ((HalfX - DefaultLayerPos.x) * userPropertiesLayer.scale.x),  HalfY - ((HalfY - DefaultLayerPos.y) * userPropertiesLayer.scale.x), thisLayer.origin.z)\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphastepsize')) {\n\t\tAlphaStep = UserProperties.animationalphastepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationdelayduration')) {\n\t\tAnimationDelayDuration = UserProperties.animationdelayduration\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationalphaposstepsize')) {\n\t\tAlphaPosStep = UserProperties.animationalphaposstepsize\n\t}\n\tif (changedUserProperties.hasOwnProperty('animationmaxalpha')) {\n\t\tMaxAlpha = changedUserProperties.animationmaxalpha\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n\tCurrentMusicState = event.state\n}\n\nexport function update(value) {\n\tif (EnableDelay){\n\t\tif (delayCounter >= AnimationDelayDuration){\n\t\t\tdelayCounter = 0\n\t\t\tEnableDelay = false\n\t\t} else {\n\t\t\tdelayCounter ++\n\t\t}\n\t} else if (StartFadeIn){\n\t\tif (thisLayer.alpha >= MaxAlpha){\n\t\t\tStartFadeIn = false\n\t\t\tthisLayer.alpha = MaxAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha += AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else if (StartFadeOut){\n\t\tif (thisLayer.alpha <= (MinAlpha + 0.01)){\n\t\t\tStartFadeOut = false\n\t\t\tthisLayer.alpha = MinAlpha\n\t\t} else {\n\t\t\tthisLayer.alpha -= AlphaStep\n\t\t\tEnableDelay = true\n\t\t\tLastdelayTotalCount ++\n\t\t}\n\t} else{\n\t\tif (CurrentMusicState != MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeIn = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MaxAlpha\n\t\t\t}\n\t\t} else {\n\t\t\tif (LastMusicState != CurrentMusicState){\n\t\t\t\tStartFadeOut = true\n\t\t\t\tLastMusicState = CurrentMusicState\n\t\t\t\tLastdelayTotalCount = 0\n\t\t\t} else {\n\t\t\t\tthisLayer.alpha = MinAlpha\n\t\t\t}\n\t\t}\n\t}\n}\n",
				"value" : true
			}
		}
	],
	"version" : 1
}